{"version":3,"file":"relationship-app.js","sources":["../src/polyfills/cytoscape-assign-fix.ts","../node_modules/esm-env/false.js","../node_modules/svelte/src/internal/shared/utils.js","../node_modules/svelte/src/internal/client/constants.js","../node_modules/svelte/src/internal/client/reactivity/equality.js","../node_modules/svelte/src/internal/client/errors.js","../node_modules/svelte/src/internal/flags/index.js","../node_modules/svelte/src/constants.js","../node_modules/svelte/src/internal/shared/errors.js","../node_modules/svelte/src/internal/client/context.js","../node_modules/svelte/src/internal/client/proxy.js","../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/svelte/src/internal/client/reactivity/sources.js","../node_modules/svelte/src/internal/client/dom/hydration.js","../node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/svelte/src/internal/client/dom/task.js","../node_modules/svelte/src/internal/client/error-handling.js","../node_modules/svelte/src/internal/client/runtime.js","../node_modules/svelte/src/utils.js","../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/svelte/src/internal/client/dom/template.js","../node_modules/svelte/src/internal/client/render.js","../node_modules/svelte/src/internal/client/dom/blocks/if.js","../node_modules/svelte/src/internal/client/dom/blocks/each.js","../node_modules/clsx/dist/clsx.mjs","../node_modules/svelte/src/internal/shared/attributes.js","../node_modules/svelte/src/internal/client/dom/elements/class.js","../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../node_modules/svelte/src/index-client.js","../node_modules/svelte/src/version.js","../node_modules/svelte/src/internal/disclose-version.js","../src/constants.ts","../src/utils/formWrappers.ts","../src/svelte/DynamicFormField.svelte","../src/svelte/DynamicFormSheet.svelte","../src/applications/DynamicDialogApp.ts","../src/svelte/MetadataManagementView.svelte","../src/applications/MetadataManagementApplication.ts","../src/services/IServiceFactory.ts","../src/services/ServiceManager.ts","../src/services/RelationshipGraphService.ts","../src/services/RelationshipGraphPersistenceService.ts","../src/services/RelationshipGraphDemoDataService.ts","../src/services/NotificationService.ts","../src/core/services/FoundryLogger.ts","../src/core/services/ConsoleErrorHandler.ts","../src/core/services/ModuleInitializer.ts","../src/svelte/RelationshipGraphView.svelte","../src/svelte/RelationshipGraphEdit.svelte","../src/applications/JournalEntryPageRelationshipGraphSheet.ts","../src/models/RelationsShipGraphModel.ts","../src/services/RegistrationService.ts","../src/core/adapters/FoundryAdapter.ts","../src/services/ServiceFactory.ts","../src/core/init.ts"],"sourcesContent":["// Polyfill fÃ¼r Cytoscape: Object.assign readonly 'equals' fix\r\nObject.assign = function (target: any, ...sources: any[]) {\r\n  for (const source of sources) {\r\n    if (source != null) {\r\n      for (const key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key) && key !== \"equals\") {\r\n          try {\r\n            target[key] = source[key];\r\n          } catch {\r\n            // Ignore readonly property errors\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target;\r\n};\r\n","export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n\n/**\n * When encountering a situation like `let [a, b, c] = $derived(blah())`,\n * we need to stash an intermediate value that `a`, `b`, and `c` derive\n * from, in case it's an iterable\n * @template T\n * @param {ArrayLike<T> | Iterable<T>} value\n * @param {number} [n]\n * @returns {Array<T>}\n */\nexport function to_array(value, n) {\n\t// return arrays unchanged\n\tif (Array.isArray(value)) {\n\t\treturn value;\n\t}\n\n\t// if value is not iterable, or `n` is unspecified (indicates a rest\n\t// element, which means we're not concerned about unbounded iterables)\n\t// convert to an array with `Array.from`\n\tif (n === undefined || !(Symbol.iterator in value)) {\n\t\treturn Array.from(value);\n\t}\n\n\t// otherwise, populate an array with `n` values\n\n\t/** @type {T[]} */\n\tconst array = [];\n\n\tfor (const element of value) {\n\t\tarray.push(element);\n\t\tif (array.length === n) break;\n\t}\n\n\treturn array;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\nexport const EFFECT_PRESERVED = 1 << 19;\nexport const EFFECT_IS_UPDATING = 1 << 20;\nexport const USER_EFFECT = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\nexport const PROXY_PATH_SYMBOL = Symbol('proxy path');\n\n/** allow users to ignore aborted signal errors if `reason.name === 'StaleReactionError` */\nexport const STALE_REACTION = new (class StaleReactionError extends Error {\n\tname = 'StaleReactionError';\n\tmessage = 'The reaction that called `getAbortSignal()` was re-run or destroyed';\n})();\n\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/** @import { Equals } from '#client' */\n\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * Calling `%method%` on a component instance (of %component%) is no longer valid in Svelte 5\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\nCalling \\`${method}\\` on a component instance (of ${component}) is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value\n\t\t\t? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}`\n\t\t\t: `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * `getAbortSignal()` can only be called inside an effect or derived\n * @returns {never}\n */\nexport function get_abort_signal_outside_reaction() {\n\tif (DEV) {\n\t\tconst error = new Error(`get_abort_signal_outside_reaction\\n\\`getAbortSignal()\\` can only be called inside an effect or derived\\nhttps://svelte.dev/e/get_abort_signal_outside_reaction`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/get_abort_signal_outside_reaction`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside `$derived(...)`, `$inspect(...)` or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside \\`$derived(...)\\`, \\`$inspect(...)\\` or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\nexport const TEMPLATE_USE_SVG = 1 << 2;\nexport const TEMPLATE_USE_MATHML = 1 << 3;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n\nexport const ATTACHMENT_KEY = '@attach';\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * A snippet function was passed invalid arguments. Snippets should only be instantiated via `{@render ...}`\n * @returns {never}\n */\nexport function invalid_snippet_arguments() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet_arguments\\nA snippet function was passed invalid arguments. Snippets should only be instantiated via \\`{@render ...}\\`\\nhttps://svelte.dev/e/invalid_snippet_arguments`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet_arguments`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * Attempted to render a snippet without a `{@render}` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change `{snippet}` to `{@render snippet()}`.\n * @returns {never}\n */\nexport function snippet_without_render_tag() {\n\tif (DEV) {\n\t\tconst error = new Error(`snippet_without_render_tag\\nAttempted to render a snippet without a \\`{@render}\\` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change \\`{snippet}\\` to \\`{@render snippet()}\\`.\\nhttps://svelte.dev/e/snippet_without_render_tag`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/snippet_without_render_tag`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext, DevStackEntry } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from './runtime.js';\nimport { create_user_effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\nimport { FILENAME } from '../../constants.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/** @type {DevStackEntry | null} */\nexport let dev_stack = null;\n\n/** @param {DevStackEntry | null} stack */\nexport function set_dev_stack(stack) {\n\tdev_stack = stack;\n}\n\n/**\n * Execute a callback with a new dev stack entry\n * @param {() => any} callback - Function to execute\n * @param {DevStackEntry['type']} type - Type of block/component\n * @param {any} component - Component function\n * @param {number} line - Line number\n * @param {number} column - Column number\n * @param {Record<string, any>} [additional] - Any additional properties to add to the dev stack entry\n * @returns {any}\n */\nexport function add_svelte_meta(callback, type, component, line, column, additional) {\n\tconst parent = dev_stack;\n\n\tdev_stack = {\n\t\ttype,\n\t\tfile: component[FILENAME],\n\t\tline,\n\t\tcolumn,\n\t\tparent,\n\t\t...additional\n\t};\n\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tdev_stack = parent;\n\t}\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tvar context = /** @type {ComponentContext} */ (component_context);\n\tvar effects = context.e;\n\n\tif (effects !== null) {\n\t\tcontext.e = null;\n\n\t\tfor (var fn of effects) {\n\t\t\tcreate_user_effect(fn);\n\t\t}\n\t}\n\n\tif (component !== undefined) {\n\t\tcontext.x = component;\n\t}\n\n\tcomponent_context = context.p;\n\n\tif (DEV) {\n\t\tdev_current_component_function = component_context?.function ?? null;\n\t}\n\n\treturn component ?? /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tget,\n\tactive_effect,\n\tupdate_version,\n\tactive_reaction,\n\tset_update_version,\n\tset_active_reaction\n} from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { state as source, set, increment } from './reactivity/sources.js';\nimport { PROXY_PATH_SYMBOL, STATE_SYMBOL } from '#client/constants';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack, tag } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n// TODO move all regexes into shared module?\nconst regex_is_valid_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function proxy(value) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar parent_version = update_version;\n\n\t/**\n\t * Executes the proxy in the context of the reaction it was originally created in, if any\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tif (update_version === parent_version) {\n\t\t\treturn fn();\n\t\t}\n\n\t\t// child source is being created after the initial proxy â\n\t\t// prevent it from being associated with the current reaction\n\t\tvar reaction = active_reaction;\n\t\tvar version = update_version;\n\n\t\tset_active_reaction(null);\n\t\tset_update_version(parent_version);\n\n\t\tvar result = fn();\n\n\t\tset_active_reaction(reaction);\n\t\tset_update_version(version);\n\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** Used in dev for $inspect.trace() */\n\tvar path = '';\n\n\t/** @param {string} new_path */\n\tfunction update_path(new_path) {\n\t\tpath = new_path;\n\n\t\ttag(version, `${path} version`);\n\n\t\t// rename all child sources and child proxies\n\t\tfor (const [prop, source] of sources) {\n\t\t\ttag(source, get_label(path, prop));\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object â which we avoid, so that state can be forked â we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\t\t\tvar s = sources.get(prop);\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => {\n\t\t\t\t\tvar s = source(descriptor.value, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t\tif (DEV && typeof prop === 'string') {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t\treturn s;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tset(s, descriptor.value, true);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tconst s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t\tincrement(version);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tincrement(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (DEV && prop === PROXY_PATH_SYMBOL) {\n\t\t\t\treturn update_path;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => {\n\t\t\t\t\tvar p = proxy(exists ? target[prop] : UNINITIALIZED);\n\t\t\t\t\tvar s = source(p, stack);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn s;\n\t\t\t\t});\n\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => {\n\t\t\t\t\t\tvar p = has ? proxy(target[prop]) : UNINITIALIZED;\n\t\t\t\t\t\tvar s = source(p, stack);\n\n\t\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t});\n\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\n\t\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\t\ttag(other_s, get_label(path, i));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(s, proxy(value));\n\n\t\t\t\t\tsources.set(prop, s);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\ttag(s, get_label(path, prop));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\n\t\t\t\tvar p = with_parent(() => proxy(value));\n\t\t\t\tset(s, p);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tincrement(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {string} path\n * @param {string | symbol} prop\n */\nfunction get_label(path, prop) {\n\tif (typeof prop === 'symbol') return `${path}[Symbol(${prop.description ?? ''})]`;\n\tif (regex_is_valid_identifier.test(prop)) return `${path}.${prop}`;\n\treturn /^\\d+$/.test(prop) ? `${path}[${prop}]` : `${path}['${prop}']`;\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_PRESERVED, MAYBE_DIRTY, UNOWNED } from '#client/constants';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value,\n\tis_destroying_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\nimport { UNINITIALIZED } from '../../../constants.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_PRESERVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (UNINITIALIZED),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect,\n\t\tac: null\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n\n\t// don't mark derived clean if we're reading it inside a\n\t// cleanup function, or it will cache a stale value\n\tif (is_destroying_effect) return;\n\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n}\n","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tcurrent_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack, tag_proxy } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\nimport { execute_derived } from './deriveds.js';\n\nexport let inspect_effects = new Set();\n\n/** @type {Map<Source, any>} */\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.updated = null;\n\t\tsignal.set_during_effect = false;\n\t\tsignal.trace = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false, trackable = true) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && trackable && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t// since we are untracking the function inside `$inspect.with` we need to add this check\n\t\t// to ensure we error if state is set inside an inspect effect\n\t\t(!untracking || (active_reaction.f & INSPECT_EFFECT) !== 0) &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT | INSPECT_EFFECT)) !== 0 &&\n\t\t!current_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value) : value;\n\n\tif (DEV) {\n\t\ttag_proxy(new_value, /** @type {string} */ (source.label));\n\t}\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\n\t\t\tif (active_effect !== null) {\n\t\t\t\tsource.set_during_effect = true;\n\t\t\t}\n\t\t}\n\n\t\tif ((source.f & DERIVED) !== 0) {\n\t\t\t// if we are assigning to a dirty derived we set it to clean/maybe dirty but we also eagerly execute it to track the dependencies\n\t\t\tif ((source.f & DIRTY) !== 0) {\n\t\t\t\texecute_derived(/** @type {Derived} */ (source));\n\t\t\t}\n\t\t\tset_signal_status(source, (source.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n\t\t}\n\n\t\tsource.wv = increment_write_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * Silently (without using `get`) increment a source\n * @param {Source<number>} source\n */\nexport function increment(source) {\n\tset(source, source.v + 1);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport { COMMENT_NODE } from '#client/constants';\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === COMMENT_NODE) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n *\n * @param {TemplateNode} node\n */\nexport function read_hydration_instruction(node) {\n\tif (!node || node.nodeType !== COMMENT_NODE) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn /** @type {Comment} */ (node).data;\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\nimport { TEXT_NODE } from '#client/constants';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate â we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate â we must therefore create one\n\tif (is_text && next_sibling?.nodeType !== TEXT_NODE) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n\n/**\n *\n * @param {string} tag\n * @param {string} [namespace]\n * @param {string} [is]\n * @returns\n */\nexport function create_element(tag, namespace, is) {\n\tlet options = is ? { is } : undefined;\n\tif (namespace) {\n\t\treturn document.createElementNS(namespace, tag, options);\n\t}\n\treturn document.createElement(tag, options);\n}\n\nexport function create_fragment() {\n\treturn document.createDocumentFragment();\n}\n\n/**\n * @param {string} data\n * @returns\n */\nexport function create_comment(data = '') {\n\treturn document.createComment(data);\n}\n\n/**\n * @param {Element} element\n * @param {string} key\n * @param {string} value\n * @returns\n */\nexport function set_attribute(element, key, value = '') {\n\tif (key.startsWith('xlink:')) {\n\t\telement.setAttributeNS('http://www.w3.org/1999/xlink', key, value);\n\t\treturn;\n\t}\n\treturn element.setAttribute(key, value);\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_PRESERVED,\n\tBOUNDARY_EFFECT,\n\tSTALE_REACTION,\n\tUSER_EFFECT\n} from '#client/constants';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function, dev_stack } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tb: parent && parent.b,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0,\n\t\tac: null\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_PRESERVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (!active_reaction && active_effect && (active_effect.f & BRANCH_EFFECT) !== 0) {\n\t\t// Top-level `$effect(...)` in a component â defer until mount\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push(fn);\n\t} else {\n\t\t// Everything else â create immediately\n\t\treturn create_user_effect(fn);\n\t}\n}\n\n/**\n * @param {() => void | (() => void)} fn\n */\nexport function create_user_effect(fn) {\n\treturn create_effect(EFFECT | USER_EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn create_effect(RENDER_EFFECT | USER_EFFECT, fn, true);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @param {<T>(fn: () => T) => Derived<T>} d\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tif (DEV) {\n\t\t// wrap the effect so that we can decorate stack trace with `in {expression}`\n\t\t// (TODO maybe there's a better approach?)\n\t\treturn render_effect(() => {\n\t\t\tvar outer = /** @type {Effect} */ (active_effect);\n\t\t\tvar inner = () => fn(...deriveds.map(get));\n\n\t\t\tdefine_property(outer.fn, 'name', { value: '{expression}' });\n\t\t\tdefine_property(inner, 'name', { value: '{expression}' });\n\n\t\t\tconst deriveds = thunks.map(d);\n\t\t\tblock(inner);\n\t\t});\n\t}\n\n\tconst deriveds = thunks.map(d);\n\treturn block(() => fn(...deriveds.map(get)));\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\tvar effect = create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n\tif (DEV) {\n\t\teffect.dev_stack = dev_stack;\n\t}\n\treturn effect;\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\teffect.ac?.abort(STALE_REACTION);\n\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif (\n\t\t(remove_dom || (effect.f & HEAD_EFFECT) !== 0) &&\n\t\teffect.nodes_start !== null &&\n\t\teffect.nodes_end !== null\n\t) {\n\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\teffect.ac =\n\t\t\tnull;\n}\n\n/**\n *\n * @param {TemplateNode | null} node\n * @param {TemplateNode} end\n */\nexport function remove_effect_dom(node, end) {\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { Effect } from '#client' */\n/** @import { Boundary } from './dom/blocks/boundary.js' */\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../../constants.js';\nimport { is_firefox } from './dom/operations.js';\nimport { BOUNDARY_EFFECT, EFFECT_RAN } from './constants.js';\nimport { define_property, get_descriptor } from '../shared/utils.js';\nimport { active_effect } from './runtime.js';\n\n/**\n * @param {unknown} error\n */\nexport function handle_error(error) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\n\tif (DEV && error instanceof Error) {\n\t\tadjust_error(error, effect);\n\t}\n\n\tif ((effect.f & EFFECT_RAN) === 0) {\n\t\t// if the error occurred while creating this subtree, we let it\n\t\t// bubble up until it hits a boundary that can handle it\n\t\tif ((effect.f & BOUNDARY_EFFECT) === 0) {\n\t\t\tthrow error;\n\t\t}\n\n\t\t// @ts-expect-error\n\t\teffect.fn(error);\n\t} else {\n\t\t// otherwise we bubble up the effect tree ourselves\n\t\tinvoke_error_boundary(error, effect);\n\t}\n}\n\n/**\n * @param {unknown} error\n * @param {Effect | null} effect\n */\nexport function invoke_error_boundary(error, effect) {\n\twhile (effect !== null) {\n\t\tif ((effect.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t/** @type {Boundary} */ (effect.b).error(error);\n\t\t\t\treturn;\n\t\t\t} catch {}\n\t\t}\n\n\t\teffect = effect.parent;\n\t}\n\n\tthrow error;\n}\n\n/** @type {WeakSet<Error>} */\nconst adjusted_errors = new WeakSet();\n\n/**\n * Add useful information to the error message/stack in development\n * @param {Error} error\n * @param {Effect} effect\n */\nfunction adjust_error(error, effect) {\n\tif (adjusted_errors.has(error)) return;\n\tadjusted_errors.add(error);\n\n\tconst message_descriptor = get_descriptor(error, 'message');\n\n\t// if the message was already changed and it's not configurable we can't change it\n\t// or it will throw a different error swallowing the original error\n\tif (message_descriptor && !message_descriptor.configurable) return;\n\n\tvar indent = is_firefox ? '  ' : '\\t';\n\tvar component_stack = `\\n${indent}in ${effect.fn?.name || '<unknown>'}`;\n\tvar context = effect.ctx;\n\n\twhile (context !== null) {\n\t\tcomponent_stack += `\\n${indent}in ${context.function?.[FILENAME].split('/').pop()}`;\n\t\tcontext = context.p;\n\t}\n\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack}\\n`\n\t});\n\n\tif (error.stack) {\n\t\t// Filter out internal modules\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack\n\t\t\t\t.split('\\n')\n\t\t\t\t.filter((line) => !line.includes('svelte/src/internal'))\n\t\t\t\t.join('\\n')\n\t\t});\n\t}\n}\n","/** @import { Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tDISCONNECTED,\n\tEFFECT_IS_UPDATING,\n\tSTALE_REACTION,\n\tUSER_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\n\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tdev_stack,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function,\n\tset_dev_stack\n} from './context.js';\nimport { handle_error, invoke_error_boundary } from './error-handling.js';\nimport { UNINITIALIZED } from '../../constants.js';\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them within that reaction should not cause a re-run\n * @type {null | Source[]}\n */\nexport let current_sources = null;\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (current_sources === null) {\n\t\t\tcurrent_sources = [value];\n\t\t} else {\n\t\t\tcurrent_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed â we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\nexport let update_version = read_version;\n\n/** @param {number} value */\nexport function set_update_version(value) {\n\tupdate_version = value;\n}\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tif (current_sources?.includes(signal)) {\n\t\treturn;\n\t}\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/** @param {Reaction} reaction */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_sources = current_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar previous_update_version = update_version;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\tcurrent_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tupdate_version = ++read_version;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\tif (reaction.ac !== null) {\n\t\treaction.ac.abort(STALE_REACTION);\n\t\treaction.ac = null;\n\t}\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!skip_reaction ||\n\t\t\t\t// Deriveds that already have reactions can cleanup, so we still add them as reactions\n\t\t\t\t((flags & DERIVED) !== 0 &&\n\t\t\t\t\t/** @type {import('#client').Derived} */ (reaction).reactions !== null)\n\t\t\t) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null && previous_reaction !== reaction) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} catch (error) {\n\t\thandle_error(error);\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tcurrent_sources = previous_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t\tupdate_version = previous_update_version;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t\tvar previous_stack = /** @type {any} */ (dev_stack);\n\t\t// only block effects have a dev stack, keep the current one otherwise\n\t\tset_dev_stack(effect.dev_stack ?? dev_stack);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\t// In DEV, increment versions of any sources that were written to during the effect,\n\t\t// so that they are correctly marked as dirty when the effect re-runs\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && effect.deps !== null) {\n\t\t\tfor (var dep of effect.deps) {\n\t\t\t\tif (dep.set_during_effect) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.set_during_effect = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t\tset_dev_stack(previous_stack);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tinvoke_error_boundary(error, last_scheduled_effect);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinvoke_error_boundary(error, last_scheduled_effect);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tvar wv = write_version;\n\n\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t// immediate effects.\n\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if state is written in a user effect, abort and re-schedule, lest we run\n\t\t\t\t// effects that should be removed as a result of the state change\n\t\t\t\tif (write_version > wv && (effect.f & USER_EFFECT) !== 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (; i < length; i += 1) {\n\t\tschedule_effect(effects[i]);\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\n\t\tis_flushing = true;\n\t\tresult = fn();\n\t}\n\n\twhile (true) {\n\t\tflush_tasks();\n\n\t\tif (queued_root_effects.length === 0) {\n\t\t\t// this would be reset in `flush_queued_root_effects` but since we are early returning here,\n\t\t\t// we need to reset it here as well in case the first time there's 0 queued root effects\n\t\t\tis_flushing = false;\n\t\t\tlast_scheduled_effect = null;\n\t\t\tif (DEV) {\n\t\t\t\tdev_effect_stack = [];\n\t\t\t}\n\t\t\treturn /** @type {T} */ (result);\n\t\t}\n\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!current_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived && !is_destroying_effect) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\t!untracking &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.trace) {\n\t\t\tsignal.trace();\n\t\t} else {\n\t\t\tvar trace = get_stack('TracedAt');\n\n\t\t\tif (trace) {\n\t\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\t\tif (entry === undefined) {\n\t\t\t\t\tentry = { traces: [] };\n\t\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t\t}\n\n\t\t\t\tvar last = entry.traces[entry.traces.length - 1];\n\n\t\t\t\t// traces can be duplicated, e.g. by `snapshot` invoking both\n\t\t\t\t// both `getOwnPropertyDescriptor` and `get` traps at once\n\t\t\t\tif (trace.stack !== last?.stack) {\n\t\t\t\t\tentry.traces.push(trace);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_destroying_effect) {\n\t\tif (old_values.has(signal)) {\n\t\t\treturn old_values.get(signal);\n\t\t}\n\n\t\tif (is_derived) {\n\t\t\tderived = /** @type {Derived} */ (signal);\n\n\t\t\tvar value = derived.v;\n\n\t\t\t// if the derived is dirty, or depends on the values that just changed, re-execute\n\t\t\tif ((derived.f & CLEAN) !== 0 || depends_on_old_values(derived)) {\n\t\t\t\tvalue = execute_derived(derived);\n\t\t\t}\n\n\t\t\told_values.set(derived, value);\n\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/** @param {Derived} derived */\nfunction depends_on_old_values(derived) {\n\tif (derived.v === UNINITIALIZED) return true; // we don't know, so assume the worst\n\tif (derived.deps === null) return false;\n\n\tfor (const dep of derived.deps) {\n\t\tif (old_values.has(dep)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ((dep.f & DERIVED) !== 0 && depends_on_old_values(/** @type {Derived} */ (dep))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\tinternal_set(signal, signal.v);\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nexport const STATE_CREATION_RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$derived',\n\t'$derived.by'\n]);\n\nconst RUNES = /** @type {const} */ ([\n\t...STATE_CREATION_RUNES,\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/** @typedef {RUNES[number]} RuneName */\n\n/**\n * @param {string} name\n * @returns {name is RuneName}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RuneName} */ (name));\n}\n\n/** @typedef {STATE_CREATION_RUNES[number]} StateCreationRuneName */\n\n/**\n * @param {string} name\n * @returns {name is StateCreationRuneName}\n */\nexport function is_state_creation_rune(name) {\n\treturn STATE_CREATION_RUNES.includes(/** @type {StateCreationRuneName} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @template {string | undefined} T\n * @param {T} location\n * @returns {T};\n */\nexport function sanitize_location(location) {\n\treturn /** @type {T} */ (location?.replace(/\\//g, '/\\u200b'));\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tdom.removeAttribute('onload');\n\tdom.removeAttribute('onerror');\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\tif (\n\t\tdom === document.body ||\n\t\t// @ts-ignore\n\t\tdom === window ||\n\t\t// @ts-ignore\n\t\tdom === document ||\n\t\t// Firefox has quirky behavior, it can happen that we still get \"canplay\" events when the element is already removed\n\t\tdom instanceof HTMLMediaElement\n\t) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html.replaceAll('<!>', '<!---->'); // XHTML compliance\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\n/** @import { TemplateStructure } from './types' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport {\n\tcreate_text,\n\tget_first_child,\n\tis_firefox,\n\tcreate_element,\n\tcreate_fragment,\n\tcreate_comment,\n\tset_attribute\n} from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport {\n\tNAMESPACE_MATHML,\n\tNAMESPACE_SVG,\n\tTEMPLATE_FRAGMENT,\n\tTEMPLATE_USE_IMPORT_NODE,\n\tTEMPLATE_USE_MATHML,\n\tTEMPLATE_USE_SVG\n} from '../../../constants.js';\nimport { COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, TEXT_NODE } from '#client/constants';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_html(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction from_namespace(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_svg(content, flags) {\n\treturn from_namespace(content, flags, 'svg');\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_mathml(content, flags) {\n\treturn from_namespace(content, flags, 'math');\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {NAMESPACE_SVG | NAMESPACE_MATHML | undefined} [ns]\n */\nfunction fragment_from_tree(structure, ns) {\n\tvar fragment = create_fragment();\n\n\tfor (var item of structure) {\n\t\tif (typeof item === 'string') {\n\t\t\tfragment.append(create_text(item));\n\t\t\tcontinue;\n\t\t}\n\n\t\t// if `preserveComments === true`, comments are represented as `['// <data>']`\n\t\tif (item === undefined || item[0][0] === '/') {\n\t\t\tfragment.append(create_comment(item ? item[0].slice(3) : ''));\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [name, attributes, ...children] = item;\n\n\t\tconst namespace = name === 'svg' ? NAMESPACE_SVG : name === 'math' ? NAMESPACE_MATHML : ns;\n\n\t\tvar element = create_element(name, namespace, attributes?.is);\n\n\t\tfor (var key in attributes) {\n\t\t\tset_attribute(element, key, attributes[key]);\n\t\t}\n\n\t\tif (children.length > 0) {\n\t\t\tvar target =\n\t\t\t\telement.tagName === 'TEMPLATE'\n\t\t\t\t\t? /** @type {HTMLTemplateElement} */ (element).content\n\t\t\t\t\t: element;\n\n\t\t\ttarget.append(\n\t\t\t\tfragment_from_tree(children, element.tagName === 'foreignObject' ? undefined : namespace)\n\t\t\t);\n\t\t}\n\n\t\tfragment.append(element);\n\t}\n\n\treturn fragment;\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_tree(structure, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tconst ns =\n\t\t\t\t(flags & TEMPLATE_USE_SVG) !== 0\n\t\t\t\t\t? NAMESPACE_SVG\n\t\t\t\t\t: (flags & TEMPLATE_USE_MATHML) !== 0\n\t\t\t\t\t\t? NAMESPACE_MATHML\n\t\t\t\t\t\t: undefined;\n\n\t\t\tnode = fragment_from_tree(structure, ns);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {() => Element | DocumentFragment} fn\n */\nexport function with_script(fn) {\n\treturn () => run_scripts(fn());\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === DOCUMENT_FRAGMENT_NODE;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== TEXT_NODE) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case â void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === COMMENT_NODE &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\nimport { COMMENT_NODE } from './constants.js';\n\n/**\n * This is normally true â block effects should run their intro transitions â\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== COMMENT_NODE || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== COMMENT_NODE ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = read_hydration_instruction(anchor);\n\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { COMMENT_NODE, INERT } from '#client/constants';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = read_hydration_instruction(anchor) === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch â remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === COMMENT_NODE &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value, false, false) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).trace = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","/** @import { Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '#client/constants';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tget,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { attach } from './attachments.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { ATTACHMENT_KEY, NAMESPACE_HTML } from '../../../../constants.js';\nimport { block, branch, destroy_effect, effect } from '../../reactivity/effects.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { init_select, select_option } from './bindings/select.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\n\t\t// Skip if value is unchanged, unless it's `undefined` and the element still has the attribute\n\t\tif (value === prev_value && !(value === undefined && element.hasAttribute(key))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked â preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} element\n * @param {(...expressions: any) => Record<string | symbol, any>} fn\n * @param {Array<() => any>} thunks\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n */\nexport function attribute_effect(\n\telement,\n\tfn,\n\tthunks = [],\n\tcss_hash,\n\tskip_warning = false,\n\td = derived\n) {\n\tconst deriveds = thunks.map(d);\n\n\t/** @type {Record<string | symbol, any> | undefined} */\n\tvar prev = undefined;\n\n\t/** @type {Record<symbol, Effect>} */\n\tvar effects = {};\n\n\tvar is_select = element.nodeName === 'SELECT';\n\tvar inited = false;\n\n\tblock(() => {\n\t\tvar next = fn(...deriveds.map(get));\n\t\t/** @type {Record<string | symbol, any>} */\n\t\tvar current = set_attributes(element, prev, next, css_hash, skip_warning);\n\n\t\tif (inited && is_select && 'value' in next) {\n\t\t\tselect_option(/** @type {HTMLSelectElement} */ (element), next.value);\n\t\t}\n\n\t\tfor (let symbol of Object.getOwnPropertySymbols(effects)) {\n\t\t\tif (!next[symbol]) destroy_effect(effects[symbol]);\n\t\t}\n\n\t\tfor (let symbol of Object.getOwnPropertySymbols(next)) {\n\t\t\tvar n = next[symbol];\n\n\t\t\tif (symbol.description === ATTACHMENT_KEY && (!prev || n !== prev[symbol])) {\n\t\t\t\tif (effects[symbol]) destroy_effect(effects[symbol]);\n\t\t\t\teffects[symbol] = branch(() => attach(element, () => n));\n\t\t\t}\n\n\t\t\tcurrent[symbol] = n;\n\t\t}\n\n\t\tprev = current;\n\t});\n\n\tif (is_select) {\n\t\tvar select = /** @type {HTMLSelectElement} */ (element);\n\n\t\teffect(() => {\n\t\t\tselect_option(select, /** @type {Record<string | symbol, any>} */ (prev).value, true);\n\t\t\tinit_select(select);\n\t\t});\n\t}\n\n\tinited = true;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { active_reaction, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * Returns an [`AbortSignal`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) that aborts when the current [derived](https://svelte.dev/docs/svelte/$derived) or [effect](https://svelte.dev/docs/svelte/$effect) re-runs or is destroyed.\n *\n * Must be called while a derived or effect is running.\n *\n * ```svelte\n * <script>\n * \timport { getAbortSignal } from 'svelte';\n *\n * \tlet { id } = $props();\n *\n * \tasync function getData(id) {\n * \t\tconst response = await fetch(`/items/${id}`, {\n * \t\t\tsignal: getAbortSignal()\n * \t\t});\n *\n * \t\treturn await response.json();\n * \t}\n *\n * \tconst data = $derived(await getData(id));\n * </script>\n * ```\n */\nexport function getAbortSignal() {\n\tif (active_reaction === null) {\n\t\te.get_abort_signal_outside_reaction();\n\t}\n\n\treturn (active_reaction.ac ??= new AbortController()).signal;\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: null; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead â see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.35.6';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","/**\r\n * Globale Konstanten fÃ¼r die relationship-app\r\n */\r\n\r\n// Modul-Identifikator\r\nexport const MODULE_ID = \"relationship-app\";\r\n\r\n// Modul-Identifikator-Prefix\r\nexport const MODULE_ID_PREFIX = `[${MODULE_ID}] |`;\r\n\r\n// Modul-Name fÃ¼r Anzeige\r\nexport const MODULE_NAME = \"Relationship App\";\r\n\r\n// Modul-Version\r\nexport const MODULE_VERSION = \"0.10.0\";\r\n\r\n// Modul-Metadata-Key\r\nexport const MODULE_METADATA_KEY = \"metadata\";\r\n\r\n// Standard-Einstellungen\r\nexport const DEFAULT_SETTINGS = {\r\n  // Standard-Farbe fÃ¼r Beziehungen\r\n  defaultRelationshipColor: \"#ff6b6b\",\r\n\r\n  // Standard-Breite fÃ¼r Beziehungslinien\r\n  defaultRelationshipWidth: 2,\r\n\r\n  // Standard-Transparenz fÃ¼r Beziehungen\r\n  defaultRelationshipOpacity: 0.8,\r\n\r\n  // Standard-GrÃ¶Ãe fÃ¼r Knoten\r\n  defaultNodeSize: 40,\r\n\r\n  // Standard-Farbe fÃ¼r Knoten\r\n  defaultNodeColor: \"#4ecdc4\",\r\n};\r\n\r\n// CSS-Klassen\r\nexport const CSS_CLASSES = {\r\n  // Haupt-Container\r\n  mainContainer: \"relationship-app\",\r\n\r\n  // Beziehungsgraph\r\n  relationshipGraph: \"relationship-graph\",\r\n\r\n  // Knoten\r\n  node: \"relationship-node\",\r\n  nodeSelected: \"relationship-node-selected\",\r\n\r\n  // Kanten\r\n  edge: \"relationship-edge\",\r\n  edgeSelected: \"relationship-edge-selected\",\r\n\r\n  // Toolbar\r\n  toolbar: \"relationship-toolbar\",\r\n\r\n  // Formulare\r\n  form: \"relationship-form\",\r\n  formGroup: \"form-group\",\r\n  formLabel: \"form-label\",\r\n  formInput: \"form-input\",\r\n  formButton: \"form-button\",\r\n};\r\n\r\n// Event-Namen\r\nexport const EVENTS = {\r\n  // Beziehungsgraph-Events\r\n  relationshipGraphUpdated: \"relationship-graph-updated\",\r\n  nodeSelected: \"node-selected\",\r\n  edgeSelected: \"edge-selected\",\r\n\r\n  // Daten-Events\r\n  dataLoaded: \"data-loaded\",\r\n  dataSaved: \"data-saved\",\r\n\r\n  // UI-Events\r\n  viewChanged: \"view-changed\",\r\n  settingsChanged: \"settings-changed\",\r\n};\r\n\r\n// API-Endpunkte\r\nexport const API_ENDPOINTS = {\r\n  // Beziehungsdaten\r\n  relationships: \"/api/relationships\",\r\n\r\n  // Metadaten\r\n  metadata: \"/api/metadata\",\r\n\r\n  // Export/Import\r\n  export: \"/api/export\",\r\n  import: \"/api/import\",\r\n};\r\n\r\n// Validierungsregeln\r\nexport const VALIDATION_RULES = {\r\n  // Minimale LÃ¤nge fÃ¼r Namen\r\n  minNameLength: 1,\r\n\r\n  // Maximale LÃ¤nge fÃ¼r Namen\r\n  maxNameLength: 100,\r\n\r\n  // Minimale LÃ¤nge fÃ¼r Beschreibungen\r\n  minDescriptionLength: 0,\r\n\r\n  // Maximale LÃ¤nge fÃ¼r Beschreibungen\r\n  maxDescriptionLength: 1000,\r\n};\r\n\r\n// Standard-Fehlermeldungen\r\nexport const ERROR_MESSAGES = {\r\n  // Allgemeine Fehler\r\n  generalError: \"Ein unerwarteter Fehler ist aufgetreten.\",\r\n\r\n  // Validierungsfehler\r\n  validationError: \"Die eingegebenen Daten sind ungÃ¼ltig.\",\r\n\r\n  // Netzwerkfehler\r\n  networkError: \"Netzwerkfehler beim Laden der Daten.\",\r\n\r\n  // Speicherfehler\r\n  saveError: \"Fehler beim Speichern der Daten.\",\r\n\r\n  // Lade-Fehler\r\n  loadError: \"Fehler beim Laden der Daten.\",\r\n};\r\n\r\n// Erfolgsmeldungen\r\nexport const SUCCESS_MESSAGES = {\r\n  // Speichern erfolgreich\r\n  saveSuccess: \"Daten wurden erfolgreich gespeichert.\",\r\n\r\n  // LÃ¶schen erfolgreich\r\n  deleteSuccess: \"Element wurde erfolgreich gelÃ¶scht.\",\r\n\r\n  // Import erfolgreich\r\n  importSuccess: \"Daten wurden erfolgreich importiert.\",\r\n\r\n  // Export erfolgreich\r\n  exportSuccess: \"Daten wurden erfolgreich exportiert.\",\r\n};\r\n\r\n// Zeitkonstanten\r\nexport const TIMING = {\r\n  // Debounce-VerzÃ¶gerung fÃ¼r Eingaben\r\n  inputDebounce: 300,\r\n\r\n  // Animation-Dauer\r\n  animationDuration: 200,\r\n\r\n  // Auto-Save-Intervall\r\n  autoSaveInterval: 5000,\r\n};\r\n\r\n// Z-Index-Werte\r\nexport const Z_INDEX = {\r\n  // Hintergrund\r\n  background: 0,\r\n\r\n  // Beziehungsgraph\r\n  graph: 1,\r\n\r\n  // Knoten\r\n  nodes: 2,\r\n\r\n  // Kanten\r\n  edges: 3,\r\n\r\n  // Tooltips\r\n  tooltips: 10,\r\n\r\n  // Modals\r\n  modals: 100,\r\n};\r\n","import type { IFormFieldDefinition } from \"../types/DynamicFormTypes\";\r\n\r\n/**\r\n * Basis-Wrapper-Funktion fÃ¼r alle Feldtypen\r\n */\r\nexport function createElement(config: {\r\n  field: string;\r\n  type: \"text\" | \"number\" | \"boolean\" | \"select\" | \"multiselect\" | \"textarea\" | \"date\" | \"color\";\r\n  label?: string;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  default?: any;\r\n  options?: string[] | Array<{ value: string; label: string }>;\r\n  description?: string;\r\n  category?: string;\r\n  validation?: {\r\n    min?: number;\r\n    max?: number;\r\n    pattern?: string;\r\n    custom?: (value: any) => string | null;\r\n  };\r\n  ui?: {\r\n    width?: \"full\" | \"half\" | \"third\";\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    disabled?: boolean;\r\n    readonly?: boolean;\r\n  };\r\n  showIf?: (values: Record<string, any>) => boolean;\r\n}): IFormFieldDefinition {\r\n  return {\r\n    id: config.field,\r\n    name: config.field,\r\n    label: config.label || config.field,\r\n    type: config.type,\r\n    required: config.required || false,\r\n    placeholder: config.placeholder || \"\",\r\n    default: config.default,\r\n    options: config.options || [],\r\n    description: config.description || \"\",\r\n    category: config.category || \"Allgemein\",\r\n    validation: config.validation || {},\r\n    ui: {\r\n      width: config.ui?.width || \"full\",\r\n      multiline: config.ui?.multiline || false,\r\n      rows: config.ui?.rows || 3,\r\n      disabled: config.ui?.disabled || false,\r\n      readonly: config.ui?.readonly || false,\r\n    },\r\n    showIf: config.showIf,\r\n  };\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Text-Felder\r\n */\r\nexport function createTextElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    placeholder?: string;\r\n    default?: string;\r\n    multiline?: boolean;\r\n    description?: string;\r\n    category?: string;\r\n    validation?: {\r\n      pattern?: string;\r\n      custom?: (value: any) => string | null;\r\n    };\r\n    showIf?: (values: Record<string, any>) => boolean;\r\n  } = {}\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: options.multiline ? \"textarea\" : \"text\",\r\n    label: options.label,\r\n    required: options.required,\r\n    placeholder: options.placeholder,\r\n    default: options.default,\r\n    description: options.description,\r\n    category: options.category,\r\n    validation: options.validation,\r\n    showIf: options.showIf,\r\n    ui: {\r\n      width: \"full\",\r\n      multiline: options.multiline,\r\n      rows: options.multiline ? 3 : undefined,\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Select-Felder\r\n */\r\nexport function createSelectElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    options: string[] | Array<{ value: string; label: string }>;\r\n    default?: string;\r\n    description?: string;\r\n    category?: string;\r\n  }\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: \"select\",\r\n    label: options.label,\r\n    required: options.required,\r\n    options: options.options,\r\n    default: options.default,\r\n    description: options.description,\r\n    category: options.category,\r\n  });\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Multi-Select-Felder\r\n */\r\nexport function createMultiSelectElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    options: string[] | Array<{ value: string; label: string }>;\r\n    default?: string[];\r\n    description?: string;\r\n    category?: string;\r\n  }\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: \"multiselect\",\r\n    label: options.label,\r\n    required: options.required,\r\n    options: options.options,\r\n    default: options.default || [],\r\n    description: options.description,\r\n    category: options.category,\r\n  });\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Zahlen-Felder\r\n */\r\nexport function createNumberElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    min?: number;\r\n    max?: number;\r\n    default?: number;\r\n    placeholder?: string;\r\n    description?: string;\r\n    category?: string;\r\n  } = {}\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: \"number\",\r\n    label: options.label,\r\n    required: options.required,\r\n    placeholder: options.placeholder,\r\n    default: options.default,\r\n    description: options.description,\r\n    category: options.category,\r\n    validation: {\r\n      min: options.min,\r\n      max: options.max,\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Boolean-Felder\r\n */\r\nexport function createBooleanElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    default?: boolean;\r\n    description?: string;\r\n    category?: string;\r\n  } = {}\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: \"boolean\",\r\n    label: options.label,\r\n    required: options.required,\r\n    default: options.default,\r\n    description: options.description,\r\n    category: options.category,\r\n  });\r\n}\r\n\r\n/**\r\n * Spezialisierter Wrapper fÃ¼r Textarea-Felder\r\n */\r\nexport function createTextareaElement(\r\n  field: string,\r\n  options: {\r\n    label?: string;\r\n    required?: boolean;\r\n    placeholder?: string;\r\n    default?: string;\r\n    rows?: number;\r\n    description?: string;\r\n    category?: string;\r\n  } = {}\r\n): IFormFieldDefinition {\r\n  return createElement({\r\n    field,\r\n    type: \"textarea\",\r\n    label: options.label,\r\n    required: options.required,\r\n    placeholder: options.placeholder,\r\n    default: options.default,\r\n    description: options.description,\r\n    category: options.category,\r\n    ui: {\r\n      width: \"full\",\r\n      multiline: true,\r\n      rows: options.rows || 3,\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Hilfsfunktion zum Erstellen von Optionen fÃ¼r Select-Felder\r\n */\r\nexport function createOptions(...options: string[]): string[] {\r\n  return options;\r\n}\r\n\r\n/**\r\n * Hilfsfunktion zum Erstellen von Optionen mit Labels fÃ¼r Select-Felder\r\n */\r\nexport function createOptionsWithLabels(\r\n  options: Record<string, string>\r\n): Array<{ value: string; label: string }> {\r\n  return Object.entries(options).map(([value, label]) => ({ value, label }));\r\n}\r\n\r\n/**\r\n * Gruppierung von Feldern\r\n */\r\nexport function createGroup(title: string, elements: IFormFieldDefinition[]) {\r\n  return { type: \"group\", title, elements };\r\n}\r\n","<script lang=\"ts\">\r\n\r\n  import type { IFormFieldDefinition } from '../types/DynamicFormTypes';\r\n  \r\n  const { element, value, error, onUpdate } = $props<{\r\n    element: IFormFieldDefinition;\r\n    value: any;\r\n    error: string | undefined;\r\n    onUpdate: (value: any) => void;\r\n  }>();\r\n  \r\n  // Feldwert aktualisieren\r\n  function updateValue(newValue: any) {\r\n    onUpdate(newValue);\r\n  }\r\n  \r\n  // Feldwert bei Blur aktualisieren\r\n  function handleBlur(e: Event) {\r\n    const target = e.target as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n    updateValue(target.value);\r\n  }\r\n  \r\n  // Checkbox-Wert aktualisieren\r\n  function handleCheckboxChange(e: Event) {\r\n    const target = e.target as HTMLInputElement;\r\n    updateValue(target.checked);\r\n  }\r\n  \r\n  // Select-Wert aktualisieren\r\n  function handleSelectChange(e: Event) {\r\n    const target = e.target as HTMLSelectElement;\r\n    updateValue(target.value);\r\n  }\r\n  \r\n  // Multi-Select Funktionen\r\n  function toggleSelection(optionValue: string, checked: boolean) {\r\n    const currentValues = (value || []) as string[];\r\n    let newValues: string[];\r\n    \r\n    if (checked) {\r\n      // Option hinzufÃ¼gen\r\n      newValues = [...currentValues, optionValue];\r\n    } else {\r\n      // Option entfernen\r\n      newValues = currentValues.filter(v => v !== optionValue);\r\n    }\r\n    \r\n    updateValue(newValues);\r\n  }\r\n  \r\n  // CSS-Klassen fÃ¼r Feldbreite\r\n  const fieldWidthClass = $derived(`field-width-${element.ui?.width || 'full'}`);\r\n  \r\n  // CSS-Klassen fÃ¼r Fehlerzustand\r\n  const fieldClasses = $derived([\r\n    'form-field',\r\n    fieldWidthClass,\r\n    error ? 'has-error' : '',\r\n    element.ui?.disabled ? 'disabled' : '',\r\n    element.ui?.readonly ? 'readonly' : ''\r\n  ].filter(Boolean).join(' '));\r\n</script>\r\n\r\n<!-- Text-Feld -->\r\n{#if element.type === 'text'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <input \r\n      id={element.id}\r\n      type=\"text\"\r\n      class=\"field-input\"\r\n      value={value || ''}\r\n      placeholder={element.placeholder || ''}\r\n      required={element.required || false}\r\n      disabled={element.ui?.disabled || false}\r\n      readonly={element.ui?.readonly || false}\r\n      oninput={(e) => updateValue((e.target as HTMLInputElement).value)}\r\n      onblur={handleBlur}\r\n    />\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Textarea-Feld -->\r\n{:else if element.type === 'textarea'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <textarea \r\n      id={element.id}\r\n      class=\"field-textarea\"\r\n      rows={element.ui?.rows || 3}\r\n      placeholder={element.placeholder || ''}\r\n      required={element.required || false}\r\n      disabled={element.ui?.disabled || false}\r\n      readonly={element.ui?.readonly || false}\r\n      oninput={(e) => updateValue((e.target as HTMLTextAreaElement).value)}\r\n      onblur={handleBlur}\r\n    >{value || ''}</textarea>\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Select-Feld -->\r\n{:else if element.type === 'select'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <select \r\n      id={element.id}\r\n      class=\"field-select\"\r\n      required={element.required || false}\r\n      disabled={element.ui?.disabled || false}\r\n      onchange={handleSelectChange}\r\n    >\r\n      <option value=\"\">Bitte wÃ¤hlen...</option>\r\n      {#each element.options || [] as option}\r\n        {#if typeof option === 'string'}\r\n          <option value={option} selected={value === option}>\r\n            {option}\r\n          </option>\r\n        {:else}\r\n          <option value={option.value} selected={value === option.value}>\r\n            {option.label || option.value}\r\n          </option>\r\n        {/if}\r\n      {/each}\r\n    </select>\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Multi-Select-Feld -->\r\n{:else if element.type === 'multiselect'}\r\n  <div class={fieldClasses}>\r\n    <div class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </div>\r\n    <div class=\"checkbox-group\">\r\n      {#each element.options || [] as option}\r\n        {#if typeof option === 'string'}\r\n          <label class=\"checkbox-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={(value || []).includes(option)}\r\n              onchange={(e) => toggleSelection(option, (e.target as HTMLInputElement).checked)}\r\n            />\r\n            <span>{option}</span>\r\n          </label>\r\n        {:else}\r\n          <label class=\"checkbox-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={(value || []).includes(option.value)}\r\n              onchange={(e) => toggleSelection(option.value, (e.target as HTMLInputElement).checked)}\r\n            />\r\n            <span>{option.label || option.value}</span>\r\n          </label>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Boolean-Feld -->\r\n{:else if element.type === 'boolean'}\r\n  <div class={fieldClasses}>\r\n    <label class=\"field-label checkbox-label\">\r\n      <input \r\n        type=\"checkbox\"\r\n        id={element.id}\r\n        class=\"field-checkbox\"\r\n        checked={value || false}\r\n        disabled={element.ui?.disabled || false}\r\n        onchange={handleCheckboxChange}\r\n      />\r\n      <span class=\"checkbox-text\">\r\n        {element.label}{element.required ? ' *' : ''}\r\n      </span>\r\n    </label>\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Number-Feld -->\r\n{:else if element.type === 'number'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <input \r\n      id={element.id}\r\n      type=\"number\"\r\n      class=\"field-input\"\r\n      value={value || ''}\r\n      placeholder={element.placeholder || ''}\r\n      required={element.required || false}\r\n      min={element.validation?.min}\r\n      max={element.validation?.max}\r\n      disabled={element.ui?.disabled || false}\r\n      readonly={element.ui?.readonly || false}\r\n      oninput={(e) => updateValue(Number((e.target as HTMLInputElement).value))}\r\n      onblur={handleBlur}\r\n    />\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Date-Feld -->\r\n{:else if element.type === 'date'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <input \r\n      id={element.id}\r\n      type=\"date\"\r\n      class=\"field-input\"\r\n      value={value || ''}\r\n      required={element.required || false}\r\n      disabled={element.ui?.disabled || false}\r\n      readonly={element.ui?.readonly || false}\r\n      onchange={(e) => updateValue((e.target as HTMLInputElement).value)}\r\n    />\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Color-Feld -->\r\n{:else if element.type === 'color'}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <div class=\"color-input-container\">\r\n      <input \r\n        id={element.id}\r\n        type=\"color\"\r\n        class=\"field-color\"\r\n        value={value || '#000000'}\r\n        required={element.required || false}\r\n        disabled={element.ui?.disabled || false}\r\n        onchange={(e) => updateValue((e.target as HTMLInputElement).value)}\r\n      />\r\n      <input \r\n        type=\"text\"\r\n        class=\"field-color-text\"\r\n        value={value || '#000000'}\r\n        placeholder=\"#000000\"\r\n        required={element.required || false}\r\n        disabled={element.ui?.disabled || false}\r\n        readonly={element.ui?.readonly || false}\r\n               oninput={(e) => updateValue((e.target as HTMLInputElement).value)}\r\n       onblur={handleBlur}\r\n      />\r\n    </div>\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n\r\n<!-- Unbekannter Feldtyp - Fallback zu Text -->\r\n{:else}\r\n  <div class={fieldClasses}>\r\n    <label for={element.id} class=\"field-label\">\r\n      {element.label}{element.required ? ' *' : ''}\r\n    </label>\r\n    <input \r\n      id={element.id}\r\n      type=\"text\"\r\n      class=\"field-input\"\r\n      value={value || ''}\r\n      placeholder={element.placeholder || ''}\r\n      required={element.required || false}\r\n      disabled={element.ui?.disabled || false}\r\n      readonly={element.ui?.readonly || false}\r\n      oninput={(e) => updateValue((e.target as HTMLInputElement).value)}\r\n      onblur={handleBlur}\r\n    />\r\n    {#if element.description}\r\n      <small class=\"field-description\">{element.description}</small>\r\n    {/if}\r\n    {#if error}\r\n      <div class=\"field-error\">{error}</div>\r\n    {/if}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .form-field {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .field-width-full {\r\n    width: 100%;\r\n  }\r\n  \r\n  .field-width-half {\r\n    width: calc(50% - 0.5rem);\r\n  }\r\n  \r\n  .field-width-third {\r\n    width: calc(33.333% - 0.667rem);\r\n  }\r\n  \r\n  .field-label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 500;\r\n    color: var(--color-text-primary);\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .field-input,\r\n  .field-textarea,\r\n  .field-select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid var(--color-border-primary);\r\n    border-radius: 4px;\r\n    font-size: 0.9rem;\r\n    transition: border-color 0.2s, box-shadow 0.2s;\r\n  }\r\n  \r\n  .field-input:focus,\r\n  .field-textarea:focus,\r\n  .field-select:focus {\r\n    outline: none;\r\n    border-color: var(--color-primary);\r\n    box-shadow: 0 0 0 2px var(--color-primary-alpha);\r\n  }\r\n  \r\n  .field-textarea {\r\n    min-height: 80px;\r\n    resize: vertical;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  .field-select {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* Checkbox-Gruppe Styles */\r\n  .checkbox-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n    padding: 0.5rem;\r\n    border: 1px solid var(--color-border-primary);\r\n    border-radius: 4px;\r\n    background: var(--color-background-primary);\r\n  }\r\n  \r\n  .checkbox-option {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    cursor: pointer;\r\n    padding: 0.25rem;\r\n    border-radius: 4px;\r\n    transition: background-color 0.2s;\r\n  }\r\n  \r\n  .checkbox-option:hover {\r\n    background: var(--color-background-secondary);\r\n  }\r\n  \r\n  .checkbox-option input[type=\"checkbox\"] {\r\n    margin: 0;\r\n    accent-color: var(--color-primary);\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .checkbox-option span {\r\n    color: var(--color-text-primary);\r\n    font-size: 0.9rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .field-checkbox {\r\n    margin-right: 0.5rem;\r\n    width: auto;\r\n  }\r\n  \r\n  .checkbox-label {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .checkbox-text {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .field-color-container {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    align-items: center;\r\n  }\r\n  \r\n  .field-color {\r\n    width: 3rem;\r\n    height: 2.5rem;\r\n    padding: 0;\r\n    border: 1px solid var(--color-border-primary);\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .field-color-text {\r\n    flex: 1;\r\n    font-family: monospace;\r\n  }\r\n  \r\n  .field-description {\r\n    display: block;\r\n    margin-top: 0.25rem;\r\n    font-size: 0.8rem;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  .field-error {\r\n    display: block;\r\n    margin-top: 0.25rem;\r\n    color: var(--color-error);\r\n    font-size: 0.8rem;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  .has-error .field-input,\r\n  .has-error .field-textarea,\r\n  .has-error .field-select {\r\n    border-color: var(--color-error);\r\n  }\r\n  \r\n  .has-error .field-input:focus,\r\n  .has-error .field-textarea:focus,\r\n  .has-error .field-select:focus {\r\n    border-color: var(--color-error);\r\n    box-shadow: 0 0 0 2px var(--color-error-alpha);\r\n  }\r\n  \r\n  .disabled .field-input,\r\n  .disabled .field-textarea,\r\n  .disabled .field-select,\r\n  .disabled .field-checkbox {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .readonly .field-input,\r\n  .readonly .field-textarea,\r\n  .readonly .field-select {\r\n    background-color: var(--color-background-secondary);\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 768px) {\r\n    .field-width-half,\r\n    .field-width-third {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\n  import type { IDynamicFormConfig, IFormFieldDefinition } from '../types/DynamicFormTypes';\r\n  import DynamicFormField from './DynamicFormField.svelte';\r\n  \r\n  const { config, onSubmit, onCancel } = $props<{ \r\n    config: IDynamicFormConfig;\r\n    onSubmit: (values: Record<string, any>) => void;\r\n    onCancel: () => void;\r\n  }>();\r\n  \r\n  // Lokaler State fÃ¼r alle Formularwerte\r\n  let formValues = $state<Record<string, any>>({});\r\n  let errors = $state<Record<string, string>>({});\r\n  let isSubmitting = $state(false);\r\n  \r\n  // Standardwerte fÃ¼r Konfiguration\r\n  const defaultConfig = {\r\n    submitLabel: 'Speichern',\r\n    cancelLabel: 'Abbrechen',\r\n    showCancelButton: true,\r\n    modalSize: 'medium',\r\n    embedding: {\r\n      mode: 'embedded',\r\n      zIndex: 1000,\r\n      animation: 'fade'\r\n    },\r\n    validation: {\r\n      location: 'child',\r\n      timing: 'onSubmit'\r\n    },\r\n    styling: {\r\n      theme: 'foundry',\r\n      inheritParentStyles: true\r\n    }\r\n  };\r\n  \r\n  // Konfiguration mit Standardwerten zusammenfÃ¼hren\r\n  const mergedConfig = $derived({\r\n    ...defaultConfig,\r\n    ...config,\r\n    embedding: { ...defaultConfig.embedding, ...config.embedding },\r\n    validation: { ...defaultConfig.validation, ...config.validation },\r\n    styling: { ...defaultConfig.styling, ...config.styling }\r\n  });\r\n  \r\n  // Initialisierung der Werte\r\n  $effect(() => {\r\n    if (config.initialValues) {\r\n      formValues = { ...config.initialValues };\r\n    } else {\r\n      // Standardwerte aus den Elementen setzen\r\n      const defaults: Record<string, any> = {};\r\n      config.elements.forEach((element: IFormFieldDefinition) => {\r\n        if (element.default !== undefined) {\r\n          defaults[element.name] = element.default;\r\n        }\r\n      });\r\n      formValues = defaults;\r\n    }\r\n    \r\n    // Scroll zum ersten Feld nach der Initialisierung\r\n    scrollToFirstField();\r\n  });\r\n  \r\n  // Feldwert aktualisieren\r\n  function updateFieldValue(fieldName: string, value: any) {\r\n    formValues = { ...formValues, [fieldName]: value };\r\n    \r\n    // Validierung bei Ãnderung\r\n    if (mergedConfig.validation.timing === 'onChange') {\r\n      validateField(fieldName);\r\n    }\r\n    \r\n    // Zwischenwerte an Parent senden\r\n    if (mergedConfig.state?.shareIntermediateValues && mergedConfig.state?.onIntermediateUpdate) {\r\n      mergedConfig.state.onIntermediateUpdate(formValues);\r\n    }\r\n  }\r\n  \r\n  // Einzelnes Feld validieren\r\n  function validateField(fieldName: string) {\r\n    const element = config.elements.find((e: IFormFieldDefinition) => e.name === fieldName);\r\n    if (!element) return;\r\n    \r\n    const fieldErrors: string[] = [];\r\n    \r\n    // Pflichtfeld-Validierung\r\n    if (element.required && (!formValues[fieldName] || formValues[fieldName] === '')) {\r\n      fieldErrors.push(`${element.label} ist erforderlich`);\r\n    }\r\n    \r\n    // Pattern-Validierung\r\n    if (element.validation?.pattern && formValues[fieldName]) {\r\n      const regex = new RegExp(element.validation.pattern);\r\n      if (!regex.test(formValues[fieldName])) {\r\n        fieldErrors.push(`${element.label} entspricht nicht dem erwarteten Format`);\r\n      }\r\n    }\r\n    \r\n    // Min/Max-Validierung fÃ¼r Zahlen\r\n    if (element.type === 'number' && formValues[fieldName] !== undefined) {\r\n      const numValue = Number(formValues[fieldName]);\r\n      if (element.validation?.min !== undefined && numValue < element.validation.min) {\r\n        fieldErrors.push(`${element.label} muss mindestens ${element.validation.min} sein`);\r\n      }\r\n      if (element.validation?.max !== undefined && numValue > element.validation.max) {\r\n        fieldErrors.push(`${element.label} darf maximal ${element.validation.max} sein`);\r\n      }\r\n    }\r\n    \r\n    // Custom-Validierung\r\n    if (element.validation?.custom) {\r\n      const customError = element.validation.custom(formValues[fieldName]);\r\n      if (customError) fieldErrors.push(customError);\r\n    }\r\n    \r\n    if (fieldErrors.length > 0) {\r\n      errors[fieldName] = fieldErrors.join(', ');\r\n      // Scroll zum ersten Feld mit Fehler\r\n      scrollToField(fieldName);\r\n    } else {\r\n      delete errors[fieldName];\r\n      errors = { ...errors };\r\n    }\r\n  }\r\n  \r\n  // Alle Felder validieren\r\n  function validateAllFields(): boolean {\r\n    config.elements.forEach((element: IFormFieldDefinition) => validateField(element.name));\r\n    return Object.keys(errors).length === 0;\r\n  }\r\n  \r\n  // Scroll zu einem bestimmten Feld\r\n  function scrollToField(fieldName: string) {\r\n    const fieldElement = document.querySelector(`[data-field-name=\"${fieldName}\"]`);\r\n    if (fieldElement) {\r\n      // Einfaches scrollIntoView fÃ¼r den form-container\r\n      fieldElement.scrollIntoView({ \r\n        behavior: 'smooth', \r\n        block: 'center',\r\n        inline: 'nearest'\r\n      });\r\n      \r\n      // Fokus auf das Feld setzen\r\n      const inputElement = fieldElement.querySelector('input, textarea, select') as HTMLElement;\r\n      if (inputElement) {\r\n        setTimeout(() => {\r\n          inputElement.focus();\r\n        }, 300); // Warten bis Scroll abgeschlossen ist\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Scroll zum ersten sichtbaren Feld beim Laden\r\n  function scrollToFirstField() {\r\n    const firstVisibleField = config.elements.find((element: IFormFieldDefinition) => \r\n      !element.showIf || element.showIf(formValues)\r\n    );\r\n    if (firstVisibleField) {\r\n      setTimeout(() => {\r\n        scrollToField(firstVisibleField.name);\r\n      }, 100);\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n  // Formular absenden\r\n  async function handleSubmit(e: Event) {\r\n    e.preventDefault();\r\n    \r\n    if (isSubmitting) return;\r\n    \r\n    // Alle Felder validieren\r\n    if (!validateAllFields()) {\r\n      // Scroll zum ersten Feld mit Fehler\r\n      const firstErrorField = Object.keys(errors)[0];\r\n      if (firstErrorField) {\r\n        scrollToField(firstErrorField);\r\n      }\r\n      return; // Fehler vorhanden\r\n    }\r\n    \r\n    isSubmitting = true;\r\n    \r\n    try {\r\n      // Callback-Funktion aufrufen, falls vorhanden\r\n      if (config.onSubmit) {\r\n        await config.onSubmit(formValues);\r\n      } else if (onSubmit) {\r\n        // Nur aufrufen, wenn config.onSubmit nicht vorhanden ist\r\n        await onSubmit(formValues);\r\n      }\r\n      \r\n      // Erfolgreich - Modal schlieÃen\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Fehler beim Absenden des Formulars:', error);\r\n      // Fehlerbehandlung hier implementieren\r\n    } finally {\r\n      isSubmitting = false;\r\n    }\r\n  }\r\n  \r\n  // Modal schlieÃen\r\n  function closeModal() {\r\n    if (config.onCancel) {\r\n      config.onCancel();\r\n    }\r\n    if (onCancel) {\r\n      onCancel();\r\n    }\r\n  }\r\n  \r\n  // Escape-Key-Handler\r\n  function handleKeydown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      closeModal();\r\n    }\r\n  }\r\n  \r\n  // Keyboard-Navigation fÃ¼r bessere UX\r\n  function handleKeyNavigation(e: KeyboardEvent) {\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      // Ctrl+Enter zum Absenden\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n  \r\n  // CSS-Klassen basierend auf Konfiguration\r\n  const formClasses = $derived([\r\n    'dynamic-form-sheet',\r\n    `form-size-${mergedConfig.modalSize}`,\r\n    `theme-${mergedConfig.styling.theme}`,\r\n    mergedConfig.styling.customClasses?.container || ''\r\n  ].filter(Boolean).join(' '));\r\n</script>\r\n\r\n<svelte:window onkeydown={handleKeydown} onkeyup={handleKeyNavigation} />\r\n\r\n<!-- Embedded Form Container -->\r\n<div class=\"form-container {formClasses}\">\r\n  <!-- Header -->\r\n  <div class=\"form-header\">\r\n    <h3 class=\"form-title\">{mergedConfig.title}</h3>\r\n    {#if mergedConfig.description}\r\n      <p class=\"form-description\">{mergedConfig.description}</p>\r\n    {/if}\r\n  </div>\r\n  \r\n  <!-- Formular -->\r\n  <form class=\"dynamic-form\" onsubmit={handleSubmit}>\r\n    <!-- Dynamische Felder -->\r\n    {#each config.elements as element (element.id)}\r\n      {#if !element.showIf || element.showIf(formValues)}\r\n        <div data-field-name={element.name} class=\"field-container\">\r\n          <DynamicFormField \r\n            {element}\r\n            value={formValues[element.name]}\r\n            error={errors[element.name]}\r\n            onUpdate={(value) => updateFieldValue(element.name, value)}\r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    \r\n    <!-- Aktions-Buttons -->\r\n    <div class=\"form-actions\">\r\n      <button \r\n        type=\"submit\" \r\n        class=\"btn btn-primary\"\r\n        disabled={isSubmitting}\r\n      >\r\n        {#if isSubmitting}\r\n          <span class=\"spinner\"></span>\r\n        {/if}\r\n        {mergedConfig.submitLabel}\r\n      </button>\r\n      \r\n      {#if mergedConfig.showCancelButton}\r\n        <button \r\n          type=\"button\" \r\n          class=\"btn btn-secondary\" \r\n          onclick={closeModal}\r\n          disabled={isSubmitting}\r\n        >\r\n          {mergedConfig.cancelLabel}\r\n        </button>\r\n      {/if}\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<style>\r\n  /* Foundry VTT CSS-Variablen verwenden */\r\n  .form-container {\r\n    background: var(--color-background-primary);\r\n    border: 1px solid var(--color-border-primary);\r\n    border-radius: var(--border-radius);\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .form-header {\r\n    border-bottom: 1px solid var(--color-border-primary);\r\n    padding: 1rem;\r\n    background: var(--color-background-secondary);\r\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\r\n    margin: -1rem -1rem 1rem -1rem;\r\n  }\r\n  \r\n  .form-title {\r\n    color: var(--color-text-primary);\r\n    margin: 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .form-description {\r\n    color: var(--color-text-secondary);\r\n    margin: 0.5rem 0 0 0;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n\r\n  \r\n  .field-container {\r\n    margin-bottom: 1.5rem;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .field-container:focus-within {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    border-radius: var(--border-radius);\r\n    padding: 0.5rem;\r\n    margin: 0.5rem -0.5rem 1.5rem -0.5rem;\r\n  }\r\n  \r\n  .form-actions {\r\n    border-top: 1px solid var(--color-border-primary);\r\n    padding: 1rem;\r\n    background: var(--color-background-secondary);\r\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    justify-content: flex-end;\r\n    margin: 1rem -1rem -1rem -1rem;\r\n  }\r\n  \r\n  .btn {\r\n    padding: 0.5rem 1rem;\r\n    border: 1px solid var(--color-border-primary);\r\n    border-radius: var(--border-radius);\r\n    cursor: pointer;\r\n    font-size: 0.9rem;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background: var(--color-primary);\r\n    color: var(--color-text-primary);\r\n    border-color: var(--color-primary);\r\n  }\r\n  \r\n  .btn-primary:hover:not(:disabled) {\r\n    background: var(--color-primary-hover);\r\n  }\r\n  \r\n  .btn-secondary {\r\n    background: var(--color-background-primary);\r\n    color: var(--color-text-primary);\r\n  }\r\n  \r\n  .btn-secondary:hover:not(:disabled) {\r\n    background: var(--color-background-secondary);\r\n  }\r\n  \r\n  .btn:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .spinner {\r\n    display: inline-block;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border: 2px solid transparent;\r\n    border-top: 2px solid currentColor;\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n  }\r\n  \r\n  /* Scroll-Indikator fÃ¼r bessere UX */\r\n  .dynamic-dialog-app::-webkit-scrollbar {\r\n    width: 12px;\r\n  }\r\n  \r\n  .dynamic-dialog-app::-webkit-scrollbar-track {\r\n    background: var(--color-background-secondary);\r\n    border-radius: 6px;\r\n  }\r\n  \r\n  .dynamic-dialog-app::-webkit-scrollbar-thumb {\r\n    background: var(--color-border-primary);\r\n    border-radius: 6px;\r\n  }\r\n  \r\n  .dynamic-dialog-app::-webkit-scrollbar-thumb:hover {\r\n    background: var(--color-primary);\r\n  }\r\n  \r\n  /* Fokus-Indikator fÃ¼r bessere Accessibility */\r\n  .field-container:focus-within :global(.field-label) {\r\n    color: var(--color-primary);\r\n    font-weight: 600;\r\n  }\r\n  \r\n  /* Smooth Transitions fÃ¼r alle interaktiven Elemente */\r\n  .form-container * {\r\n    transition: border-color 0.2s ease, box-shadow 0.2s ease, color 0.2s ease;\r\n  }\r\n</style>\r\n","import { mount, unmount } from \"svelte\";\r\nimport DynamicFormSheet from \"../svelte/DynamicFormSheet.svelte\";\r\nimport type { IDynamicFormConfig } from \"../types/DynamicFormTypes\";\r\n\r\nexport default class DynamicDialogApp extends foundry.applications.api.HandlebarsApplicationMixin(\r\n  foundry.applications.api.ApplicationV2\r\n) {\r\n  /**\r\n   * Merge the default parts, inserting our graph part between header and footer.\r\n   */\r\n  static PARTS = {\r\n    main: {\r\n      template: \"modules/relationship-app/templates/DynamicFormApp.hbs\",\r\n    },\r\n  };\r\n\r\n  static appId = \"DynamicDialogApp\";\r\n  static config: IDynamicFormConfig = {\r\n    title: \"Dynamic Dialog\",\r\n    elements: [],\r\n  };\r\n  static onSubmit: (values: Record<string, any>) => void = () => {};\r\n  static onCancel: () => void = () => {};\r\n\r\n  svelteApp: any = null;\r\n\r\n  /** @override */\r\n  static DEFAULT_OPTIONS = {\r\n    // Unique ID for the sheet\r\n    id: \"dynamic-dialog\",\r\n    // CSS classes to apply\r\n    classes: [\"dynamic-dialog\"],\r\n    // Window sizing and behavior\r\n    position: { width: 800, height: 600 },\r\n    window: { title: \"Dynamic Dialog\", resizable: true },\r\n    tag: \"div\",\r\n  };\r\n\r\n  /** @override */\r\n  get title() {\r\n    return this.options.window.title;\r\n  }\r\n\r\n  /** @override */\r\n  async _renderHTML(context: any, options: any) {\r\n    // Delegate template rendering to HandlebarsApplicationMixin\r\n    return super._renderHTML(context, options);\r\n  }\r\n\r\n  /** @override */\r\n  _replaceHTML(html: any, options: any, context: any) {\r\n    // Replace rendered HTML via HandlebarsApplicationMixin\r\n    return super._replaceHTML(html, options, context);\r\n  }\r\n\r\n  async _prepareContext(options: any) {\r\n    const context = await super._prepareContext(options);\r\n    console.log(`[${DynamicDialogApp.appId}] _prepareContext called with context:`, context);\r\n    console.log(`[${DynamicDialogApp.appId}] _prepareContext called with options:`, options);\r\n    return context;\r\n  }\r\n\r\n  async _prepareConfig(config: IDynamicFormConfig) {\r\n    DynamicDialogApp.config = config;\r\n    console.log(`[${DynamicDialogApp.appId}] _prepareConfig called with config:`, DynamicDialogApp.config);\r\n    return DynamicDialogApp.config;\r\n  }\r\n\r\n  async _prepareOnSubmit(onSubmit: (values: Record<string, any>) => void) {\r\n    DynamicDialogApp.onSubmit = onSubmit;\r\n    console.log(`[${DynamicDialogApp.appId}] _prepareOnSubmit called with onSubmit:`, DynamicDialogApp.onSubmit);\r\n    return DynamicDialogApp.onSubmit;\r\n  }\r\n\r\n  async _prepareOnCancel(onCancel: () => void) {\r\n    DynamicDialogApp.onCancel = onCancel;\r\n    console.log(`[${DynamicDialogApp.appId}] _prepareOnCancel called with onCancel:`, DynamicDialogApp.onCancel);\r\n    return DynamicDialogApp.onCancel;\r\n  }\r\n\r\n  async _onRender(context: any, options: any) {\r\n    console.log(`[${DynamicDialogApp.appId}] _onRender started`, { context, options });\r\n\r\n    try {\r\n      await super._onRender(context, options);\r\n      \r\n      // CSS-Datei laden\r\n      await this._loadCSS();\r\n      \r\n      const target = this.element.querySelector(\"#dynamic-dialog-svelte\");\r\n      \r\n      if (!target) {\r\n        throw new Error(\"Svelte mount point '#dynamic-dialog-svelte' not found\");\r\n      }\r\n\r\n      console.log(`[${DynamicDialogApp.appId}] Found target element:`, target);\r\n\r\n      // Unmount existing instance\r\n      if (this.svelteApp) {\r\n        console.log(`[${DynamicDialogApp.appId}] Unmounting existing Svelte app`);\r\n        await unmount(this.svelteApp);\r\n        this.svelteApp = null;\r\n      }\r\n\r\n      // Mount the new DynamicFormSheet component\r\n      this.svelteApp = mount(DynamicFormSheet, {\r\n        target,\r\n        props: {\r\n          config: DynamicDialogApp.config,\r\n          onSubmit: DynamicDialogApp.onSubmit,\r\n          onCancel: DynamicDialogApp.onCancel\r\n        },\r\n      });\r\n\r\n      console.log(`[${DynamicDialogApp.appId}] DynamicFormSheet mounted successfully`);\r\n    } catch (error) {\r\n      console.error(`[${DynamicDialogApp.appId}] Error during render:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSS-Datei fÃ¼r die DynamicDialogApp laden\r\n   */\r\n  async _loadCSS() {\r\n    const cssPath = \"modules/relationship-app/styles/dynamic-dialog-app.css\";\r\n    \r\n    // PrÃ¼fen ob CSS bereits geladen wurde\r\n    if (document.querySelector(`link[href*=\"${cssPath}\"]`)) {\r\n      return;\r\n    }\r\n    \r\n    // CSS-Datei laden\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.type = \"text/css\";\r\n    link.href = cssPath;\r\n    document.head.appendChild(link);\r\n    \r\n    console.log(`[${DynamicDialogApp.appId}] CSS loaded: ${cssPath}`);\r\n  }\r\n\r\n  /** @override */\r\n  async _onClose(options: any) {\r\n    console.log(`[${DynamicDialogApp.appId}] _onClose called with options:`, options);\r\n    if (this.svelteApp) {\r\n      await unmount(this.svelteApp);\r\n      this.svelteApp = null;\r\n    }\r\n    return super._onClose(options);\r\n  }\r\n\r\n  /**\r\n   * Statische Methode zum einfachen Ãffnen des Dialogs\r\n   */\r\n  static async show(config: IDynamicFormConfig): Promise<Record<string, any> | null> {\r\n    return new Promise((resolve) => {\r\n      const app = new DynamicDialogApp();\r\n      \r\n      // Konfiguration setzen\r\n      app._prepareConfig(config);\r\n      \r\n      // Callbacks setzen\r\n      app._prepareOnSubmit((values) => {\r\n        app.close();\r\n        resolve(values);\r\n      });\r\n      \r\n      app._prepareOnCancel(() => {\r\n        app.close();\r\n        resolve(null);\r\n      });\r\n      \r\n      // Dialog Ã¶ffnen\r\n      app.render(true);\r\n    });\r\n  }\r\n}\r\n","<script lang=\"ts\">\n  console.log(\"MetadataManagementView\");\n\n  import { MODULE_ID, MODULE_METADATA_KEY } from '../constants';\n  import { onMount } from 'svelte';\n  import type { IDynamicFormConfig } from '../types/DynamicFormTypes';\n  import { \n  createTextElement, \n  createSelectElement, \n  createMultiSelectElement,\n  createBooleanElement, \n  createOptions \n} from '../utils/formWrappers';\n  import DynamicDialogApp from '../applications/DynamicDialogApp';\n\n\n  interface IMetadata {\n    schemas: ISchema[]; // Array aller Schemas\n  }\n\n  interface ISchema {\n    // Array aller Metadaten-Zeilen, die das Schema definieren\n    rows: IMetadataRow[];\n    \n    // Liste aller verfÃ¼gbaren Kategorien fÃ¼r die Gruppierung der Metadaten\n    categories: string[];\n    \n    // Eindeutige ID des Schemas (fÃ¼r API-Zugriffe und interne Verarbeitung)\n    id: string;\n    \n    // Technischer Name des Schemas (fÃ¼r API-Zugriffe und interne Verarbeitung)\n    name: string;\n    \n    // Benutzerfreundlicher Anzeigename des Schemas\n    label: string;\n    \n    // Detaillierte Beschreibung des Schemas und seiner Verwendung\n    description: string;\n    \n    // Versionsnummer des Schemas (fÃ¼r Versionsverwaltung und Updates)\n    version: string;\n    \n    // Name des Autors oder der Organisation, die das Schema erstellt hat\n    author: string;\n  }\n\n  interface IMetadataRow {\n    // Eindeutige ID fÃ¼r die Metadaten-Zeile\n    id: string;\n    \n    // Technischer Name des Feldes (fÃ¼r API-Zugriffe und interne Verarbeitung)\n    name: string;\n    \n    // Benutzerfreundlicher Anzeigename des Feldes\n    label: string;\n    \n    // Aktueller Wert des Metadaten-Feldes\n    value: any;\n    \n    // Datentyp des Feldes (z.B. 'string', 'number', 'boolean', 'select', 'textarea')\n    type: string;\n    \n    // Gibt an, ob das Feld zwingend ausgefÃ¼llt werden muss\n    required: boolean;\n    \n    // Standardwert, der verwendet wird, wenn kein Wert gesetzt ist\n    default: any;\n    \n    // VerfÃ¼gbare Optionen fÃ¼r Auswahlfelder (z.B. Dropdown-Listen)\n    options: any[];\n    \n    // Platzhaltertext, der im Eingabefeld angezeigt wird\n    placeholder: string;\n    \n    // Detaillierte Beschreibung des Feldes fÃ¼r Benutzer\n    description: string;\n    \n    // Kategorie, in die das Feld eingeordnet wird (fÃ¼r Gruppierung)\n    category: string;\n  }\n\n  // Hauptmetadaten-Objekt\n  let metadata: IMetadata = $state({\n    schemas: [],\n  });\n\n  // UI-State-Management\n  let editingSchema: ISchema | null = $state(null);\n  let editingRow: IMetadataRow | null = $state(null);\n  let selectedSchemaId: string | null = $state(null);\n  let isCreatingNewSchema: boolean = $state(false);\n  let isCreatingNewRow: boolean = $state(false);\n  let isLoading: boolean = $state(false);\n  let errorMessage: string | null = $state(null);\n  let successMessage: string | null = $state(null);\n  // App-Instanz nicht mehr benÃ¶tigt, da wir die statische show()-Methode verwenden\n\n  // Neue Schema-Erstellung\n  let newSchema: Partial<ISchema> = $state({\n    name: '',\n    label: '',\n    description: '',\n    author: '',\n    version: '1.0.0',\n    categories: [],\n    rows: []\n  });\n\n  // Neue Zeilen-Erstellung\n  let newRow: Partial<IMetadataRow> = $state({\n    name: '',\n    label: '',\n    type: 'string',\n    required: false,\n    category: 'Allgemein',\n    default: '',\n    options: [],\n    placeholder: '',\n    description: ''\n  });\n\n  // Konstanten\n  const FIELD_TYPES = [\n    { value: 'string', label: 'Text' },\n    { value: 'number', label: 'Zahl' },\n    { value: 'boolean', label: 'Wahr/Falsch' },\n    { value: 'select', label: 'Auswahl' },\n    { value: 'textarea', label: 'Mehrzeiliger Text' }\n  ];\n\n  const DEFAULT_CATEGORIES = [\n    'Allgemein',\n    'Beziehungen',\n    'Eigenschaften',\n    'Notizen',\n    'System'\n  ];\n\n  // Hilfsfunktionen\n  function generateSchemaId(): string {\n    return foundry.utils.randomID();\n  }\n\n  function generateRowId(): string {\n    return foundry.utils.randomID();\n  }\n\n  function validateSchema(schema: Partial<ISchema>): string[] {\n    const errors: string[] = [];\n    if (!schema.name?.trim()) errors.push('Schema-Name ist erforderlich');\n    if (!schema.label?.trim()) errors.push('Schema-Label ist erforderlich');\n    return errors;\n  }\n\n  function validateMetadataRow(row: Partial<IMetadataRow>): string[] {\n    const errors: string[] = [];\n    if (!row.name?.trim()) errors.push('Feldname ist erforderlich');\n    if (!row.label?.trim()) errors.push('Feldlabel ist erforderlich');\n    if (!row.type) errors.push('Feldtyp ist erforderlich');\n    return errors;\n  }\n\n  function getSchemaById(schemaId: string): ISchema | undefined {\n    return metadata.schemas.find(s => s.id === schemaId);\n  }\n\n  function getRowById(schemaId: string, rowId: string): IMetadataRow | undefined {\n    const schema = getSchemaById(schemaId);\n    return schema?.rows.find(r => r.id === rowId);\n  }\n\n  function getCategoriesFromSchema(schema: ISchema): string[] {\n    return [...new Set([...DEFAULT_CATEGORIES, ...schema.categories])];\n  }\n\n  // CRUD-Operationen fÃ¼r Schemas\n  async function createSchema(schemaData: Partial<ISchema>): Promise<void> {\n    const errors = validateSchema(schemaData);\n    if (errors.length > 0) {\n      errorMessage = errors.join(', ');\n      return;\n    }\n\n    const newSchema: ISchema = {\n      id: generateSchemaId(),\n      rows: [],\n      categories: Array.isArray(schemaData.categories) ? [...schemaData.categories] : [...DEFAULT_CATEGORIES],\n      name: schemaData.name || '',\n      label: schemaData.label || '',\n      description: schemaData.description || '',\n      version: schemaData.version || '1.0.0',\n      author: schemaData.author || ''\n    };\n    \n    metadata.schemas.push(newSchema);\n    await saveMetadataToRegistry(metadata);\n    \n    // Reset form\n    newSchema.name = '';\n    newSchema.label = '';\n    newSchema.description = '';\n    newSchema.author = '';\n    newSchema.version = '1.0.0';\n    newSchema.categories = [];\n    newSchema.rows = [];\n    \n    isCreatingNewSchema = false;\n    successMessage = 'Schema erfolgreich erstellt';\n    setTimeout(() => successMessage = null, 3000);\n  }\n\n  async function updateSchema(schemaId: string, updates: Partial<ISchema>): Promise<void> {\n    const schemaIndex = metadata.schemas.findIndex(s => s.id === schemaId);\n    if (schemaIndex === -1) return;\n\n    const errors = validateSchema(updates);\n    if (errors.length > 0) {\n      errorMessage = errors.join(', ');\n      return;\n    }\n\n    metadata.schemas[schemaIndex] = { ...metadata.schemas[schemaIndex], ...updates };\n    await saveMetadataToRegistry(metadata);\n    \n    editingSchema = null;\n    successMessage = 'Schema erfolgreich aktualisiert';\n    setTimeout(() => successMessage = null, 3000);\n  }\n\n  async function deleteSchema(schemaId: string): Promise<void> {\n    if (confirm('Sind Sie sicher, dass Sie dieses Schema lÃ¶schen mÃ¶chten?')) {\n      metadata.schemas = metadata.schemas.filter(s => s.id !== schemaId);\n      await saveMetadataToRegistry(metadata);\n      \n      if (selectedSchemaId === schemaId) {\n        selectedSchemaId = null;\n      }\n      \n      successMessage = 'Schema erfolgreich gelÃ¶scht';\n      setTimeout(() => successMessage = null, 3000);\n    }\n  }\n\n  async function duplicateSchema(schemaId: string): Promise<void> {\n    const originalSchema = getSchemaById(schemaId);\n    if (!originalSchema) return;\n\n    const duplicatedSchema: ISchema = {\n      ...originalSchema,\n      id: generateSchemaId(),\n      name: `${originalSchema.name}_copy`,\n      label: `${originalSchema.label} (Kopie)`,\n      version: '1.0.0'\n    };\n\n    metadata.schemas.push(duplicatedSchema);\n    await saveMetadataToRegistry(metadata);\n    \n    successMessage = 'Schema erfolgreich dupliziert';\n    setTimeout(() => successMessage = null, 3000);\n  }\n\n  // CRUD-Operationen fÃ¼r Metadaten-Zeilen\n  async function addMetadataRow(schemaId: string, rowData: Partial<IMetadataRow>): Promise<void> {\n    const errors = validateMetadataRow(rowData);\n    if (errors.length > 0) {\n      errorMessage = errors.join(', ');\n      return;\n    }\n\n    const schema = getSchemaById(schemaId);\n    if (!schema) return;\n    \n    const newRow: IMetadataRow = {\n      id: generateRowId(),\n      name: rowData.name || '',\n      label: rowData.label || '',\n      value: rowData.default || null,\n      type: rowData.type || 'string',\n      required: rowData.required || false,\n      default: rowData.default || null,\n      options: rowData.options || [],\n      placeholder: rowData.placeholder || '',\n      description: rowData.description || '',\n      category: rowData.category || 'Allgemein'\n    };\n    \n    schema.rows.push(newRow);\n    await saveMetadataToRegistry(metadata);\n    \n    // Reset form\n    newRow.name = '';\n    newRow.label = '';\n    newRow.type = 'string';\n    newRow.required = false;\n    newRow.category = 'Allgemein';\n    newRow.default = '';\n    newRow.options = [];\n    newRow.placeholder = '';\n    newRow.description = '';\n    \n    isCreatingNewRow = false;\n    successMessage = 'Metadaten-Zeile erfolgreich hinzugefÃ¼gt';\n    setTimeout(() => successMessage = null, 3000);\n  }\n\n  async function updateMetadataRow(schemaId: string, rowId: string, updates: Partial<IMetadataRow>): Promise<void> {\n    const schema = getSchemaById(schemaId);\n    if (!schema) return;\n\n    const rowIndex = schema.rows.findIndex(r => r.id === rowId);\n    if (rowIndex === -1) return;\n\n    const errors = validateMetadataRow(updates);\n    if (errors.length > 0) {\n      errorMessage = errors.join(', ');\n      return;\n    }\n\n    schema.rows[rowIndex] = { ...schema.rows[rowIndex], ...updates };\n    await saveMetadataToRegistry(metadata);\n    \n    editingRow = null;\n    successMessage = 'Metadaten-Zeile erfolgreich aktualisiert';\n    setTimeout(() => successMessage = null, 3000);\n  }\n\n  async function deleteMetadataRow(schemaId: string, rowId: string): Promise<void> {\n    if (confirm('Sind Sie sicher, dass Sie diese Metadaten-Zeile lÃ¶schen mÃ¶chten?')) {\n      const schema = getSchemaById(schemaId);\n      if (!schema) return;\n\n      schema.rows = schema.rows.filter(r => r.id !== rowId);\n      await saveMetadataToRegistry(metadata);\n      \n      successMessage = 'Metadaten-Zeile erfolgreich gelÃ¶scht';\n      setTimeout(() => successMessage = null, 3000);\n    }\n  }\n\n  async function reorderMetadataRows(schemaId: string, rowIds: string[]): Promise<void> {\n    const schema = getSchemaById(schemaId);\n    if (!schema) return;\n\n    const reorderedRows: IMetadataRow[] = [];\n    for (const rowId of rowIds) {\n      const row = schema.rows.find(r => r.id === rowId);\n      if (row) reorderedRows.push(row);\n    }\n\n    schema.rows = reorderedRows;\n    await saveMetadataToRegistry(metadata);\n  }\n\n  // UI-Hilfsfunktionen\n  // Neue Schema-Erstellung\n  async function startCreatingNewSchema(): Promise<void> {\n    isCreatingNewSchema = true;\n    editingSchema = null;\n    \n    const config = createSchemaFormConfig();\n    const result = await DynamicDialogApp.show(config);\n    \n    if (result) {\n      console.log('Neues Schema erstellt:', result);\n      // Hier wÃ¼rde die Schema-Erstellung implementiert\n    }\n    \n    isCreatingNewSchema = false;\n  }\n\n  // Schema-Bearbeitung starten\n  async function startEditingSchema(schema: ISchema): Promise<void> {\n    editingSchema = schema;\n    isCreatingNewSchema = false;\n    \n    const config = createSchemaFormConfig();\n    const result = await DynamicDialogApp.show(config);\n    \n    if (result) {\n      console.log('Schema bearbeitet:', result);\n      // Hier wÃ¼rde die Schema-Bearbeitung implementiert\n    }\n    \n    editingSchema = null;\n  }\n\n  // Zeilen-Bearbeitung starten\n  async function startEditingRow(schemaId: string, row: IMetadataRow): Promise<void> {\n    editingRow = { ...row };\n    isCreatingNewRow = false;\n    \n    const config = createRowFormConfig();\n    const result = await DynamicDialogApp.show(config);\n    \n    if (result) {\n      console.log('Metadaten-Zeile bearbeitet:', result);\n      // Hier wÃ¼rde die Metadaten-Zeile-Bearbeitung implementiert\n    }\n    \n    editingRow = null;\n  }\n\n  // Neue Zeilen-Erstellung\n  async function startCreatingNewRow(schemaId: string): Promise<void> {\n    isCreatingNewRow = true;\n    editingRow = null;\n    \n    const config = createRowFormConfig();\n    const result = await DynamicDialogApp.show(config);\n    \n    if (result) {\n      console.log('Neue Metadaten-Zeile erstellt:', result);\n      // Hier wÃ¼rde die Metadaten-Zeile-Erstellung implementiert\n    }\n    \n    isCreatingNewRow = false;\n  }\n\n  \n\n  // Schema auswÃ¤hlen\n  function selectSchema(schemaId: string): void {\n    selectedSchemaId = selectedSchemaId === schemaId ? null : schemaId;\n  }\n\n  // Separate Variablen fÃ¼r Formular-Bindings\n  let schemaFormData = $derived(editingSchema || newSchema);\n  let rowFormData = $derived(editingRow || newRow);\n  \n  // Schema-Formular mit Wrappern erstellen\n  function createSchemaFormConfig() {\n    let elements = [];\n    \n    elements.push(createTextElement('name', { \n      required: true, \n      placeholder: 'Technischer Name (z.B. character_metadata)',\n      label: 'Name',\n      description: 'Technischer Name fÃ¼r API-Zugriffe'\n    }));\n    \n    elements.push(createTextElement('label', { \n      required: true, \n      placeholder: 'Anzeigename (z.B. Charakter-Metadaten)',\n      label: 'Label',\n      description: 'Benutzerfreundlicher Anzeigename'\n    }));\n    \n    elements.push(createTextElement('description', { \n      multiline: true, \n      placeholder: 'Beschreibung des Schemas',\n      label: 'Beschreibung',\n      description: 'Detaillierte Beschreibung des Schemas'\n    }));\n    \n    elements.push(createTextElement('version', { \n      default: '1.0.0', \n      placeholder: '1.0.0',\n      label: 'Version',\n      description: 'Versionsnummer des Schemas'\n    }));\n    \n    elements.push(createTextElement('author', { \n      placeholder: 'Ihr Name',\n      label: 'Autor',\n      description: 'Name des Autors oder der Organisation'\n    }));\n    \n    elements.push(createMultiSelectElement('categories', {\n      options: DEFAULT_CATEGORIES,\n      label: 'Kategorien',\n      description: 'VerfÃ¼gbare Kategorien fÃ¼r die Gruppierung der Metadaten'\n    }));\n    \n    return {\n      title: isCreatingNewSchema ? 'Neues Schema erstellen' : 'Schema bearbeiten',\n      elements: elements,\n      initialValues: editingSchema || {},\n      submitLabel: isCreatingNewSchema ? 'Erstellen' : 'Aktualisieren',\n      onSubmit: async (values: any) => {\n        if (editingSchema) {\n          await updateSchema(editingSchema.id, values);\n        } else {\n          await createSchema(values);\n        }\n        // Dialog wird automatisch geschlossen\n      },\n      onCancel: () => {\n        // Dialog wird automatisch geschlossen\n      }\n    };\n  }\n  \n  // Metadaten-Zeile Formular mit Wrappern erstellen\n  function createRowFormConfig() {\n    let elements = [];\n    \n    elements.push(createTextElement('name', { \n      required: true, \n      placeholder: 'Technischer Name (z.B. strength)',\n      label: 'Name',\n      description: 'Technischer Name fÃ¼r API-Zugriffe'\n    }));\n    \n    elements.push(createTextElement('label', { \n      required: true, \n      placeholder: 'Anzeigename (z.B. StÃ¤rke)',\n      label: 'Label',\n      description: 'Benutzerfreundlicher Anzeigename'\n    }));\n    \n    elements.push(createSelectElement('type', {\n      required: true,\n      options: createOptions('string', 'number', 'boolean', 'select', 'textarea'),\n      label: 'Typ',\n      description: 'Datentyp des Feldes'\n    }));\n    \n    elements.push(createMultiSelectElement('category', {\n      options: DEFAULT_CATEGORIES,\n      label: 'Kategorie',\n      description: 'Kategorie fÃ¼r die Gruppierung'\n    }));\n    \n    elements.push(createTextElement('description', { \n      multiline: true, \n      placeholder: 'Beschreibung des Feldes',\n      label: 'Beschreibung',\n      description: 'Detaillierte Beschreibung des Feldes'\n    }));\n    \n    elements.push(createTextElement('placeholder', { \n      placeholder: 'Platzhaltertext',\n      label: 'Platzhalter',\n      description: 'Text der im Eingabefeld angezeigt wird'\n    }));\n    \n    elements.push(createTextElement('default', { \n      placeholder: 'Standardwert',\n      label: 'Standardwert',\n      description: 'Standardwert wenn kein Wert gesetzt ist'\n    }));\n    \n    elements.push(createBooleanElement('required', {\n      default: false,\n      label: 'Pflichtfeld',\n      description: 'Gibt an, ob das Feld zwingend ausgefÃ¼llt werden muss'\n    }));\n    \n    // Options-Feld fÃ¼r Select-Typen\n    elements.push(createTextElement('options', {\n      multiline: true,\n      placeholder: 'Option1, Option2, Option3 (kommagetrennt)',\n      label: 'VerfÃ¼gbare Optionen',\n      description: 'VerfÃ¼gbare AuswahlmÃ¶glichkeiten (kommagetrennt) - nur fÃ¼r Select-Felder relevant',\n      showIf: (values) => values.type === 'select'\n    }));\n    \n    return {\n      title: isCreatingNewRow ? 'Neue Metadaten-Zeile erstellen' : 'Metadaten-Zeile bearbeiten',\n      elements: elements,\n      initialValues: editingRow || {},\n      submitLabel: isCreatingNewRow ? 'Erstellen' : 'Aktualisieren',\n      onSubmit: async (values: any) => {\n        if (editingRow && selectedSchemaId) {\n          await updateMetadataRow(selectedSchemaId, editingRow.id, values);\n        } else if (selectedSchemaId) {\n          await addMetadataRow(selectedSchemaId, values);\n        }\n        // Dialog wird automatisch geschlossen\n      },\n      onCancel: () => {\n        // Dialog wird automatisch geschlossen\n      }\n    };\n  }\n\n  function addNewOption(): void {\n    if (editingRow) {\n      editingRow.options = [...(editingRow.options || []), ''];\n    } else {\n      newRow.options = [...(newRow.options || []), ''];\n    }\n  }\n\n  function removeOption(index: number): void {\n    if (editingRow && editingRow.options) {\n      editingRow.options = editingRow.options.filter((_, i) => i !== index);\n    } else if (newRow.options) {\n      newRow.options = newRow.options.filter((_, i) => i !== index);\n    }\n  }\n\n  function updateOption(index: number, value: string): void {\n    if (editingRow && editingRow.options) {\n      editingRow.options = editingRow.options.map((opt, i) => i === index ? value : opt);\n    } else if (newRow.options) {\n      newRow.options = newRow.options.map((opt, i) => i === index ? value : opt);\n    }\n  }\n\n  // Bestehende Funktionen\n  async function saveMetadataToRegistry(metadataParameter: IMetadata) {\n    await game?.settings?.set(MODULE_ID as any, MODULE_METADATA_KEY as any, metadataParameter as any);\n  }\n\n  async function getMetadataFromRegistry() {\n    return await game?.settings?.get(MODULE_ID as any, MODULE_METADATA_KEY as any);\n  }\n\n  async function loadMetadata() {\n    const loaded = await getMetadataFromRegistry() as IMetadata;\n    if (loaded && loaded.schemas) {\n      // Sicherstellen, dass alle Schemata ein categories Array haben\n      loaded.schemas.forEach(schema => {\n        // Kategorien validieren und als echtes Array setzen\n        if (!schema.categories || !Array.isArray(schema.categories)) {\n          schema.categories = [...DEFAULT_CATEGORIES];\n        } else {\n          // Sicherstellen, dass es ein echtes Array ist (nicht Proxy)\n          schema.categories = [...schema.categories];\n        }\n        \n        // Rows validieren und als echtes Array setzen\n        if (!schema.rows || !Array.isArray(schema.rows)) {\n          schema.rows = [];\n        } else {\n          // Sicherstellen, dass es ein echtes Array ist (nicht Proxy)\n          schema.rows = [...schema.rows];\n        }\n      });\n      metadata = loaded;\n    } else {\n      // Fallback: Leere Metadaten initialisieren\n      metadata = { schemas: [] };\n    }\n  }\n\n  // Nur speichern wenn sich die Daten tatsÃ¤chlich geÃ¤ndert haben\n  $effect(() => {\n    if (metadata && metadata.schemas !== undefined && metadata.schemas.length > 0) {\n      // VerzÃ¶gertes Speichern um Endlosschleifen zu vermeiden\n      setTimeout(() => {\n        saveMetadataToRegistry(metadata);\n      }, 100);\n    }\n  })\n\n  onMount(() => {\n    loadMetadata();\n    \n    // Globaler Escape-Key-Listener fÃ¼r Modals\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && (isCreatingNewSchema || editingSchema || isCreatingNewRow || editingRow)) {\n        // Escape-Handling wird jetzt von DynamicDialogApp Ã¼bernommen\n      }\n    };\n    \n    document.addEventListener('keydown', handleEscape);\n    \n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  })\n\n</script>\n\n<div class=\"metadata-container\">\n  <div class=\"metadata-header\">\n    <h1>Metadaten-Verwaltung</h1>\n    <div class=\"header-actions\">\n      <button class=\"bright\" onclick={() => startCreatingNewSchema()}>\n        Neues Schema\n      </button>\n    </div>\n  </div>\n\n  {#if errorMessage}\n    <div class=\"error-message\">\n      <span>{errorMessage}</span>\n      <button class=\"close-btn\" onclick={() => errorMessage = null}>Ã</button>\n    </div>\n  {/if}\n  \n  {#if successMessage}\n    <div class=\"success-message\">\n      <span>{successMessage}</span>\n      <button class=\"close-btn\" onclick={() => successMessage = null}>Ã</button>\n    </div>\n  {/if}\n\n  <div class=\"metadata-content\">\n    {#if isLoading}\n      <p>Lade Schemas...</p>\n    {:else if metadata.schemas.length === 0}\n      <p>Keine Schemas vorhanden. Erstellen Sie Ihr erstes Schema.</p>\n    {:else}\n      {#each metadata.schemas as schema (schema.id)}\n        <div class=\"schema-card {selectedSchemaId === schema.id ? 'selected' : ''}\">\n          <button class=\"schema-header\" onclick={() => selectSchema(schema.id)}>\n            <h3>{schema.label}</h3>\n            <span class=\"version\">v{schema.version}</span>\n          </button>\n          \n          {#if selectedSchemaId === schema.id}\n            <div class=\"schema-details\">\n              <p><strong>Beschreibung:</strong> {schema.description || 'Keine Beschreibung'}</p>\n              <p><strong>Autor:</strong> {schema.author || 'Unbekannt'}</p>\n              <p><strong>Kategorien:</strong> {schema.categories.join(', ')}</p>\n              <p><strong>Metadaten-Zeilen:</strong> {schema.rows.length}</p>\n              \n              <div class=\"actions\">\n                <button onclick={() => startEditingSchema(schema)}>Bearbeiten</button>\n                <button onclick={() => duplicateSchema(schema.id)}>Duplizieren</button>\n                <button onclick={() => deleteSchema(schema.id)}>LÃ¶schen</button>\n                <button class=\"bright\" onclick={() => startCreatingNewRow(schema.id)}>Neue Zeile</button>\n              </div>\n              \n              {#if schema.rows.length > 0}\n                <div class=\"rows-section\">\n                  <h4>Metadaten-Zeilen</h4>\n                  {#each schema.rows as row (row.id)}\n                    <div class=\"row-item\">\n                      <div class=\"row-info\">\n                        <strong>{row.label}</strong> ({row.name}) - {row.type}\n                        {#if row.required} - <em>Erforderlich</em>{/if}\n                      </div>\n                      <div class=\"row-actions\">\n                        <button onclick={() => startEditingRow(schema.id, row)}>Bearbeiten</button>\n                        <button onclick={() => deleteMetadataRow(schema.id, row.id)}>LÃ¶schen</button>\n                      </div>\n                    </div>\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          {/if}\n        </div>\n      {/each}\n    {/if}\n  </div>\n</div>\n\n<style>\n  /* Gleiches Scrolling wie DynamicFormSheet */\n  .metadata-container {\n    height: 100vh;\n    max-height: 100vh;\n    overflow-y: auto;\n    padding: 1rem;\n    box-sizing: border-box;\n  }\n\n  .metadata-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid var(--color-border-primary);\n  }\n\n  .header-actions {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n  }\n\n  .metadata-header h1 {\n    margin: 0;\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  .metadata-content {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .schema-card {\n    background: var(--color-background-secondary);\n    border: 1px solid var(--color-border-primary);\n    border-radius: 6px;\n    overflow: hidden;\n  }\n\n  .schema-card.selected {\n    border-color: var(--color-primary);\n  }\n\n  .schema-header {\n    padding: 1rem;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: var(--color-background-primary);\n    border-bottom: 1px solid var(--color-border-primary);\n  }\n\n  .schema-header:hover {\n    background: var(--color-background-tertiary);\n  }\n\n  .schema-header h3 {\n    margin: 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n  }\n\n  .version {\n    background: var(--color-info);\n    color: var(--color-text-primary);\n    padding: 0.2rem 0.5rem;\n    border-radius: 4px;\n    font-size: 0.8rem;\n  }\n\n  .schema-details {\n    padding: 1rem;\n    background: var(--color-background-secondary);\n  }\n\n  .schema-details p {\n    margin: 0.5rem 0;\n    font-size: 0.9rem;\n  }\n\n  .actions {\n    display: flex;\n    gap: 0.5rem;\n    margin: 1rem 0;\n    flex-wrap: wrap;\n  }\n\n  .rows-section {\n    margin-top: 1.5rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--color-border-primary);\n  }\n\n  .rows-section h4 {\n    margin: 0 0 1rem 0;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n\n  .row-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.75rem;\n    background: var(--color-background-primary);\n    border: 1px solid var(--color-border-primary);\n    border-radius: 4px;\n    margin-bottom: 0.5rem;\n  }\n\n  .row-info {\n    font-size: 0.9rem;\n  }\n\n  .row-actions {\n    display: flex;\n    gap: 0.5rem;\n  }\n\n  .error-message,\n  .success-message {\n    padding: 1rem;\n    border-radius: 4px;\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .error-message {\n    background: var(--color-error-background);\n    color: var(--color-error);\n    border: 1px solid var(--color-error-border);\n  }\n  \n  .success-message {\n    background: var(--color-success-background);\n    color: var(--color-success);\n    border: 1px solid var(--color-success-border);\n  }\n\n  .close-btn {\n    background: none;\n    border: none;\n    font-size: 1.2rem;\n    cursor: pointer;\n    color: inherit;\n    padding: 0;\n    margin-left: 1rem;\n  }\n\n  .close-btn:hover {\n    opacity: 0.7;\n  }\n</style>","import { mount, unmount } from \"svelte\";\r\nimport MetadataManagementView from \"../svelte/MetadataManagementView.svelte\";\r\n\r\nexport default class MetadataManagementApplication extends foundry.applications.api.HandlebarsApplicationMixin(\r\n  foundry.applications.api.ApplicationV2\r\n) {\r\n  /**\r\n   * Merge the default parts, inserting our graph part between header and footer.\r\n   */\r\n  static PARTS = {\r\n    main: {\r\n      template: \"modules/relationship-app/templates/metadata-management-main.hbs\",\r\n    },\r\n  };\r\n\r\n  svelteApp: any = null;\r\n\r\n  /** @override */\r\n  static DEFAULT_OPTIONS = {\r\n    // Unique ID for the sheet\r\n    id: \"metadata-management\",\r\n    // CSS classes to apply\r\n    classes: [\"metadata-management\"],\r\n    // Window sizing and behavior\r\n    position: { width: 800, height: 600 },\r\n    window: { title: \"Metadata Management\", resizable: true },\r\n    tag: \"div\",\r\n  };\r\n\r\n  /** @override */\r\n  get title() {\r\n    return this.options.window.title;\r\n  }\r\n\r\n  /** @override */\r\n  async _renderHTML(context: any, options: any) {\r\n    // Delegate template rendering to HandlebarsApplicationMixin\r\n    return super._renderHTML(context, options);\r\n  }\r\n\r\n  /** @override */\r\n  _replaceHTML(html: any, options: any, context: any) {\r\n    // Replace rendered HTML via HandlebarsApplicationMixin\r\n    return super._replaceHTML(html, options, context);\r\n  }\r\n\r\n  async _prepareContext(options: any) {\r\n    const context = await super._prepareContext(options);\r\n    console.log(\"[MetadataManagementApplication] _prepareContext called with context:\", context);\r\n    console.log(\"[MetadataManagementApplication] _prepareContext called with options:\", options);\r\n    return context;\r\n  }\r\n\r\n  async _loadCSS() {\r\n    const cssPath = \"modules/relationship-app/styles/metadata-management-app.css\";\r\n    if (document.querySelector(`link[href*=\"${cssPath}\"]`)) {\r\n      return;\r\n    }\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.type = \"text/css\";\r\n    link.href = cssPath;\r\n    document.head.appendChild(link);\r\n    console.log(\"[MetadataManagementApplication] CSS loaded: \", cssPath);\r\n  }\r\n\r\n  async _onRender(context: any, options: any) {\r\n    console.log(\"[MetadataManagementApplication] _onRender started\", { context, options });\r\n\r\n    await super._onRender(context, options);\r\n    const target = this.element.querySelector(\"#metadata-management-svelte\");\r\n    if (!target) {\r\n      console.warn(\"[MetadataManagementApplication] Svelte mount point not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"[MetadataManagementApplication] Found target element:\", target);\r\n\r\n    // Unmount existing instance\r\n    if (this.svelteApp) {\r\n      console.log(\"[MetadataManagementApplication] Unmounting existing Svelte app\");\r\n      await unmount(this.svelteApp);\r\n      this.svelteApp = null;\r\n    }\r\n\r\n\r\n    await this._loadCSS();\r\n    // Mount the new MetadataManagementView component\r\n    this.svelteApp = mount(MetadataManagementView, {\r\n      target,\r\n      props: {},\r\n    });\r\n\r\n    console.log(\"[MetadataManagementApplication] MetadataManagementView mounted successfully\");\r\n  }\r\n\r\n  /** @override */\r\n  async _onClose(options: any) {\r\n    console.log(\"[MetadataManagementApplication] _onClose called with options:\", options);\r\n    if (this.svelteApp) {\r\n      await unmount(this.svelteApp);\r\n      this.svelteApp = null;\r\n    } else {\r\n    }\r\n    return super._onClose(options);\r\n  }\r\n}\r\n","// Basisklasse fÃ¼r alle Services mit Metadaten\r\nexport abstract class BaseService {\r\n  abstract readonly API_NAME: string;\r\n  abstract readonly SERVICE_TYPE: 'singleton' | 'factory';\r\n}\r\n\r\n// Generic service factory interface\r\nexport interface IServiceFactory {\r\n  // Register a service constructor with its identifier\r\n  registerService<T>(identifier: string, constructor: ServiceConstructor<T>): void;\r\n\r\n  // Create a service instance by identifier\r\n  createService<T>(identifier: string, ...args: any[]): T;\r\n\r\n  // Check if a service is registered\r\n  hasService(identifier: string): boolean;\r\n\r\n  // Get all registered service identifiers\r\n  getRegisteredServices(): string[];\r\n\r\n  // Register all services in API\r\n  registerAllServicesInAPI(): void;\r\n}\r\n\r\n// Type for service constructors\r\nexport type ServiceConstructor<T = any> = new (...args: any[]) => T;\r\n\r\n// Service identifiers as constants\r\nexport const SERVICE_IDENTIFIERS = {\r\n  // Cross-Cutting Concerns\r\n  FOUNDRY_LOGGER: \"FoundryLogger\",\r\n  CONSOLE_ERROR_HANDLER: \"ConsoleErrorHandler\",\r\n  FOUNDRY_ADAPTER: \"FoundryAdapter\",\r\n  \r\n  // Core Services\r\n  MODULE_INITIALIZER: \"ModuleInitializer\",\r\n  REGISTRATION_SERVICE: \"RegistrationService\",\r\n  \r\n  // Business Services\r\n  RELATIONSHIP_GRAPH: \"RelationshipGraphService\",\r\n  RELATIONSHIP_GRAPH_PERSISTENCE: \"RelationshipGraphPersistenceService\",\r\n  RELATIONSHIP_GRAPH_DEMO_DATA: \"RelationshipGraphDemoDataService\",\r\n  NOTIFICATION: \"NotificationService\", // â Test-Service hinzugefÃ¼gt\r\n} as const;\r\n\r\nexport type ServiceIdentifier = (typeof SERVICE_IDENTIFIERS)[keyof typeof SERVICE_IDENTIFIERS];\r\n","import type { IServiceManager } from \"./IServiceManager\";\r\nimport type { IServiceFactory, IServiceMetadata } from \"./IServiceFactory\";\r\nimport { ServiceFactory } from \"./ServiceFactory\";\r\n\r\nexport class ServiceManager implements IServiceManager {\r\n  private static instance: ServiceManager;\r\n  private readonly serviceCache = new Map<string, Map<any, any>>();\r\n  private readonly serviceRegistry = new Map<string, any>();\r\n  private readonly instances = new Map<string, any>();\r\n\r\n  private constructor(private readonly factory: IServiceFactory) {}\r\n\r\n  static getInstance(factory: IServiceFactory = ServiceFactory.getInstance()): ServiceManager {\r\n    if (!ServiceManager.instance) {\r\n      ServiceManager.instance = new ServiceManager(factory);\r\n    }\r\n    return ServiceManager.instance;\r\n  }\r\n\r\n  getService<T>(serviceIdentifier: string, cacheKey?: any, ...args: any[]): T {\r\n    // If no cache key provided, create service directly\r\n    if (cacheKey === undefined) {\r\n      return this.factory.createService<T>(serviceIdentifier, ...args);\r\n    }\r\n\r\n    // Get or create service cache for this service type\r\n    let serviceTypeCache = this.serviceCache.get(serviceIdentifier);\r\n    if (!serviceTypeCache) {\r\n      serviceTypeCache = new Map<any, T>();\r\n      this.serviceCache.set(serviceIdentifier, serviceTypeCache);\r\n    }\r\n\r\n    // Get cached service or create new one\r\n    let service = serviceTypeCache.get(cacheKey);\r\n    if (!service) {\r\n      service = this.factory.createService<T>(serviceIdentifier, ...args);\r\n      serviceTypeCache.set(cacheKey, service);\r\n    }\r\n    return service;\r\n  }\r\n\r\n  disposeService(serviceIdentifier: string, cacheKey?: any): void {\r\n    const serviceTypeCache = this.serviceCache.get(serviceIdentifier);\r\n    if (serviceTypeCache && cacheKey !== undefined) {\r\n      serviceTypeCache.delete(cacheKey);\r\n    }\r\n  }\r\n\r\n  disposeAll(): void {\r\n    this.serviceCache.clear();\r\n    this.instances.clear();\r\n  }\r\n\r\n  // DI Container FunktionalitÃ¤t hinzufÃ¼gen\r\n  register<T>(identifier: string, factory: () => T, singleton: boolean = true, dependencies: string[] = []): void {\r\n    this.serviceRegistry.set(identifier, {\r\n      factory,\r\n      singleton,\r\n      dependencies\r\n    });\r\n  }\r\n\r\n  registerWithMetadata<T>(identifier: string, ServiceConstructor: new (...args: any[]) => T, dependencies: string[] = []): void {\r\n    const metadata = (ServiceConstructor as any) as IServiceMetadata;\r\n    \r\n    this.register(\r\n      identifier,\r\n      () => {\r\n        const args = dependencies.map(dep => this.resolve(dep));\r\n        return new ServiceConstructor(...args);\r\n      },\r\n      metadata.SERVICE_TYPE === 'singleton',\r\n      dependencies\r\n    );\r\n  }\r\n\r\n  resolve<T>(identifier: string): T {\r\n    // Return existing instance if singleton\r\n    if (this.instances.has(identifier)) {\r\n      return this.instances.get(identifier);\r\n    }\r\n\r\n    const registration = this.serviceRegistry.get(identifier);\r\n    if (!registration) {\r\n      throw new Error(`Service '${identifier}' is not registered`);\r\n    }\r\n\r\n    // Resolve dependencies first\r\n    const resolvedDependencies = registration.dependencies.map((dep: string) => this.resolve(dep));\r\n    \r\n    // Create instance with resolved dependencies\r\n    const instance = registration.factory(...resolvedDependencies);\r\n\r\n    // Cache if singleton\r\n    if (registration.singleton) {\r\n      this.instances.set(identifier, instance);\r\n    }\r\n\r\n    return instance;\r\n  }\r\n\r\n  isRegistered(identifier: string): boolean {\r\n    return this.serviceRegistry.has(identifier);\r\n  }\r\n\r\n  getRegisteredServices(): string[] {\r\n    return Array.from(this.serviceRegistry.keys());\r\n  }\r\n\r\n  // Service Replacement fÃ¼r externe Module\r\n  replaceService<T>(identifier: string, newInstance: T): void {\r\n    if (!this.isRegistered(identifier)) {\r\n      throw new Error(`Service '${identifier}' is not registered`);\r\n    }\r\n\r\n    // Alte Instanz aus Cache entfernen\r\n    this.instances.delete(identifier);\r\n    \r\n    // Neue Instanz setzen\r\n    this.instances.set(identifier, newInstance);\r\n  }\r\n\r\n  // Service Factory Replacement\r\n  replaceServiceFactory<T>(identifier: string, newFactory: () => T): void {\r\n    if (!this.isRegistered(identifier)) {\r\n      throw new Error(`Service '${identifier}' is not registered`);\r\n    }\r\n\r\n    const registration = this.serviceRegistry.get(identifier);\r\n    registration.factory = newFactory;\r\n    \r\n    // Alte Instanz aus Cache entfernen\r\n    this.instances.delete(identifier);\r\n  }\r\n}\r\n","import type { RelationshipGraphData } from \"../global\";\r\nimport type { IRelationshipGraphService } from \"./IRelationshipGraphService\";\r\nimport type { IRelationshipGraphPersistenceService } from \"./IRelationshipGraphPersistenceService\";\r\nimport type { IFoundryAdapter } from \"../core/adapters/IFoundryAdapter\";\r\n\r\nexport class RelationshipGraphService implements IRelationshipGraphService {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'createGraphService';\r\n  static readonly SERVICE_TYPE = 'factory' as const;\r\n  private elements: any = { nodes: [], edges: [] };\r\n  private style: any[] = [];\r\n\r\n  constructor(\r\n    private document: any,\r\n    private persistence: IRelationshipGraphPersistenceService,\r\n    private foundryAdapter: IFoundryAdapter\r\n  ) {\r\n    // Only load data if both document and persistence are available\r\n    if (this.document && this.persistence) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  // Neue Methoden fÃ¼r Cytoscape-kompatible Datenzugriffe\r\n  getElements(): any {\r\n    return this.elements;\r\n  }\r\n\r\n  getNodes(): any[] {\r\n    return this.elements.nodes || [];\r\n  }\r\n\r\n  getEdges(): any[] {\r\n    return this.elements.edges || [];\r\n  }\r\n\r\n  // Document Access\r\n  getDocument(): any {\r\n    return this.document;\r\n  }\r\n\r\n  // Cytoscape-kompatible Suchmethoden\r\n  findNodeById(id: string): any {\r\n    return this.elements.nodes?.find((node: any) => node.data.id === id);\r\n  }\r\n\r\n  findEdgesBySource(sourceId: string): any[] {\r\n    return this.elements.edges?.filter((edge: any) => edge.data.source === sourceId) || [];\r\n  }\r\n\r\n  findEdgesByTarget(targetId: string): any[] {\r\n    return this.elements.edges?.filter((edge: any) => edge.data.target === targetId) || [];\r\n  }\r\n\r\n  // Filter-Methoden mit Cytoscape-Effizienz\r\n  filterNodesByType(type: string): any[] {\r\n    return this.elements.nodes?.filter((node: any) => node.data.type === type) || [];\r\n  }\r\n\r\n  filterEdgesByType(type: string): any[] {\r\n    return this.elements.edges?.filter((edge: any) => edge.data.type === type) || [];\r\n  }\r\n\r\n  getGraphData(): RelationshipGraphData {\r\n    return {\r\n      description: this.document?.description || \"Neuer Beziehungsgraph\",\r\n      version: \"1.0.0\",\r\n      created: this.document?.created || Date.now(),\r\n      modified: this.document?.modified || Date.now(),\r\n      elements: this.elements,\r\n      style: this.style,\r\n    };\r\n  }\r\n\r\n  getNode(nodeId: string): any {\r\n    return this.findNodeById(nodeId);\r\n  }\r\n\r\n  getEdge(edgeId: string): any {\r\n    return this.elements.edges?.find((e: any) => e.data.id === edgeId);\r\n  }\r\n\r\n  getNodeByLabel(label: string): any {\r\n    return this.elements.nodes?.find((node: any) => node.data.label === label);\r\n  }\r\n\r\n  getEdgeByLabel(label: string): any {\r\n    return this.elements.edges?.find((edge: any) => edge.data.label === label);\r\n  }\r\n\r\n  getNodeByType(type: string): any {\r\n    return this.elements.nodes?.find((node: any) => node.data.type === type);\r\n  }\r\n\r\n  getEdgeByType(type: string): any {\r\n    return this.elements.edges?.find((edge: any) => edge.data.type === type);\r\n  }\r\n\r\n  getNodeById(id: string): any {\r\n    return this.findNodeById(id);\r\n  }\r\n\r\n  getEdgeById(id: string): any {\r\n    return this.elements.edges?.find((e: any) => e.data.id === id);\r\n  }\r\n\r\n  /**\r\n   * FÃ¼gt einen neuen Node hinzu oder aktualisiert einen bestehenden\r\n   */\r\n  async addNode(nodeData: any): Promise<void> {\r\n    const existingNode = this.findNodeById(nodeData.id);\r\n    if (existingNode) {\r\n      this.updateNode(nodeData.id, nodeData);\r\n    } else {\r\n      const newNode = {\r\n        data: {\r\n          id: nodeData.id,\r\n          label: nodeData.label || \"\",\r\n          type: nodeData.type || \"\",\r\n          x: nodeData.x,\r\n          y: nodeData.y,\r\n          permissions: nodeData.permissions || { defaultLevel: 0, users: [] },\r\n          descriptions: nodeData.descriptions,\r\n          playerRelationshipEffects: nodeData.playerRelationshipEffects,\r\n          image: nodeData.image,\r\n          zIndex: nodeData.zIndex,\r\n          ...nodeData.cytoScapeAttributes,\r\n        },\r\n        position: {\r\n          x: nodeData.x,\r\n          y: nodeData.y,\r\n        },\r\n      };\r\n      this.elements.nodes?.push(newNode);\r\n    }\r\n    await this.saveData();\r\n  }\r\n\r\n  /**\r\n   * FÃ¼gt eine neue Edge hinzu oder aktualisiert eine bestehende\r\n   */\r\n  async addEdge(edgeData: any): Promise<void> {\r\n    const defaultPermissions = { defaultLevel: 0, users: [] };\r\n    const newEdge = {\r\n      data: {\r\n        id: edgeData.id || this.foundryAdapter.generateId(),\r\n        source: edgeData.source,\r\n        target: edgeData.target,\r\n        label: edgeData.label || `${edgeData.source} â ${edgeData.target}`,\r\n        type: edgeData.type || \"relation\",\r\n        permissions: edgeData.permissions || defaultPermissions,\r\n        connectionCategory: edgeData.connectionCategory,\r\n        zIndex: edgeData.zIndex,\r\n        ...edgeData.cytoScapeAttributes,\r\n      },\r\n    };\r\n\r\n    if (!this.elements.edges) {\r\n      this.elements.edges = [];\r\n    }\r\n\r\n    const existingEdgeIndex = this.elements.edges.findIndex(\r\n      (e: any) => e.data.id === newEdge.data.id\r\n    );\r\n    if (existingEdgeIndex >= 0) {\r\n      this.elements.edges[existingEdgeIndex] = newEdge;\r\n    } else {\r\n      this.elements.edges.push(newEdge);\r\n    }\r\n    await this.saveData();\r\n  }\r\n\r\n  /**\r\n   * Aktualisiert einen bestehenden Node\r\n   */\r\n  async updateNode(nodeId: string, updates: any): Promise<void> {\r\n    const node = this.findNodeById(nodeId);\r\n    if (node) {\r\n      const updatedNode = {\r\n        ...node,\r\n        data: {\r\n          ...node.data,\r\n          ...updates,\r\n        },\r\n      };\r\n      const index = this.elements.nodes?.findIndex((n: any) => n.data.id === nodeId);\r\n      if (index !== undefined && index >= 0 && this.elements.nodes) {\r\n        this.elements.nodes[index] = updatedNode;\r\n      }\r\n      await this.saveData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Entfernt einen Node und alle verbundenen Edges\r\n   */\r\n  async removeNode(nodeId: string): Promise<void> {\r\n    if (this.elements.nodes) {\r\n      this.elements.nodes = this.elements.nodes.filter((n: any) => n.data.id !== nodeId);\r\n    }\r\n    if (this.elements.edges) {\r\n      this.elements.edges = this.elements.edges.filter(\r\n        (e: any) => e.data.source !== nodeId && e.data.target !== nodeId\r\n      );\r\n    }\r\n    await this.saveData();\r\n  }\r\n\r\n  /**\r\n   * Aktualisiert eine bestehende Edge\r\n   */\r\n  async updateEdge(edgeId: string, updates: any): Promise<void> {\r\n    const edge = this.elements.edges?.find((e: any) => e.data.id === edgeId);\r\n    if (edge) {\r\n      const updatedEdge = {\r\n        ...edge,\r\n        data: {\r\n          ...edge.data,\r\n          ...updates,\r\n        },\r\n      };\r\n      const index = this.elements.edges?.findIndex((e: any) => e.data.id === edgeId);\r\n      if (index !== undefined && index >= 0 && this.elements.edges) {\r\n        this.elements.edges[index] = updatedEdge;\r\n      }\r\n      await this.saveData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Entfernt eine Edge\r\n   */\r\n  async removeEdge(edgeId: string): Promise<void> {\r\n    if (this.elements.edges) {\r\n      this.elements.edges = this.elements.edges.filter((e: any) => e.data.id !== edgeId);\r\n    }\r\n    await this.saveData();\r\n  }\r\n\r\n  // Graph Operations\r\n  async moveNode(nodeId: string, x: number, y: number): Promise<void> {\r\n    const node = this.findNodeById(nodeId);\r\n    if (node) {\r\n      node.position.x = x;\r\n      node.position.y = y;\r\n      await this.saveData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verbindet zwei Nodes mit einer Edge\r\n   */\r\n  async connectNodes(sourceId: string, targetId: string, edgeData?: any): Promise<void> {\r\n    const sourceNode = this.findNodeById(sourceId);\r\n    const targetNode = this.findNodeById(targetId);\r\n\r\n    if (!sourceNode || !targetNode) {\r\n      throw new Error(\"Source or target node not found\");\r\n    }\r\n\r\n    const newEdge = {\r\n      data: {\r\n        id: this.foundryAdapter.generateId(),\r\n        source: sourceId,\r\n        target: targetId,\r\n        label: \"Relationship\",\r\n        type: \"default\",\r\n        cytoScapeAttributes: {\r\n          \"line-color\": \"#000000\",\r\n          width: 1,\r\n          \"line-style\": \"solid\",\r\n          \"curve-style\": \"bezier\",\r\n          \"target-arrow-color\": \"#000000\",\r\n          \"target-arrow-shape\": \"triangle\",\r\n          color: \"#000000\",\r\n        },\r\n        permissions: { defaultLevel: 0, users: [] },\r\n        ...edgeData,\r\n      },\r\n    };\r\n\r\n    await this.addEdge(newEdge.data);\r\n  }\r\n\r\n  async disconnectNodes(sourceId: string, targetId: string): Promise<void> {\r\n    this.elements.edges = this.elements.edges?.filter(\r\n      (e: any) => !(e.data.source === sourceId && e.data.target === targetId)\r\n    );\r\n    await this.saveData();\r\n  }\r\n\r\n  // Search and Filter Operations\r\n  searchNodes(query: string): any[] {\r\n    const lowerQuery = query.toLowerCase();\r\n    return (\r\n      this.elements.nodes?.filter(\r\n        (node: any) =>\r\n          node.data.label?.toLowerCase().includes(lowerQuery) ||\r\n          node.data.type?.toLowerCase().includes(lowerQuery)\r\n      ) || []\r\n    );\r\n  }\r\n\r\n  searchEdges(query: string): any[] {\r\n    const lowerQuery = query.toLowerCase();\r\n    return (\r\n      this.elements.edges?.filter(\r\n        (edge: any) =>\r\n          edge.data.label?.toLowerCase().includes(lowerQuery) ||\r\n          edge.data.type?.toLowerCase().includes(lowerQuery)\r\n      ) || []\r\n    );\r\n  }\r\n\r\n  // Graph Analysis\r\n  getConnectedNodes(nodeId: string): any[] {\r\n    const connectedNodeIds = new Set<string>();\r\n\r\n    this.elements.edges?.forEach((edge: any) => {\r\n      if (edge.data.source === nodeId) {\r\n        connectedNodeIds.add(edge.data.target);\r\n      } else if (edge.data.target === nodeId) {\r\n        connectedNodeIds.add(edge.data.source);\r\n      }\r\n    });\r\n\r\n    return this.elements.nodes?.filter((node: any) => connectedNodeIds.has(node.data.id)) || [];\r\n  }\r\n\r\n  getNodeDegree(nodeId: string): number {\r\n    return (\r\n      this.elements.edges?.filter(\r\n        (edge: any) => edge.data.source === nodeId || edge.data.target === nodeId\r\n      ).length || 0\r\n    );\r\n  }\r\n\r\n  getGraphStats(): any {\r\n    const nodeCount = this.elements.nodes?.length || 0;\r\n    const edgeCount = this.elements.edges?.length || 0;\r\n    const averageConnections = nodeCount > 0 ? edgeCount / nodeCount : 0;\r\n    const isolatedNodes =\r\n      this.elements.nodes?.filter(\r\n        (n: any) =>\r\n          !this.elements.edges?.some(\r\n            (e: any) => e.data.source === n.data.id || e.data.target === n.data.id\r\n          )\r\n      ).length || 0;\r\n\r\n    const nodeDegrees =\r\n      this.elements.nodes?.map((node: any) => this.getNodeDegree(node.data.id)) || [];\r\n    const maxDegree = nodeDegrees.length > 0 ? Math.max(...nodeDegrees) : 0;\r\n    const minDegree = nodeDegrees.length > 0 ? Math.min(...nodeDegrees) : 0;\r\n\r\n    return {\r\n      nodeCount,\r\n      edgeCount,\r\n      averageConnections,\r\n      isolatedNodes,\r\n      maxDegree,\r\n      minDegree,\r\n      density: nodeCount > 1 ? (2 * edgeCount) / (nodeCount * (nodeCount - 1)) : 0,\r\n    };\r\n  }\r\n\r\n  // Demo Data Management\r\n  async loadDemoData(demoData: { nodes: any[]; edges: any[] }): Promise<void> {\r\n    if (!this.persistence || !this.document) {\r\n      // Cannot load demo data - persistence or document not available\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Konvertiere Demo-Daten zu Cytoscape-Format\r\n      this.elements.nodes = demoData.nodes.map((node) => ({\r\n        data: {\r\n          id: node.id,\r\n          label: node.label?.value || \"\",\r\n          type: node.type?.value || \"\",\r\n          x: node.x,\r\n          y: node.y,\r\n          permissions: node.globalPermissions,\r\n          descriptions: node.descriptions,\r\n          playerRelationshipEffects: node.playerRelationshipEffects,\r\n          image: node.image,\r\n          zIndex: node.zIndex,\r\n          ...node.cytoScapeAttributes,\r\n        },\r\n        position: {\r\n          x: node.x,\r\n          y: node.y,\r\n        },\r\n      }));\r\n      this.elements.edges = demoData.edges.map((edge) => ({\r\n        data: {\r\n          id: edge.id,\r\n          source: edge.source,\r\n          target: edge.target,\r\n          label: edge.label?.value || \"\",\r\n          type: edge.type,\r\n          permissions: edge.globalPermissions,\r\n          connectionCategory: edge.connectionCategory,\r\n          zIndex: edge.zIndex,\r\n          ...edge.cytoScapeAttributes,\r\n        },\r\n      }));\r\n\r\n      // Save demo data to document\r\n      await this.saveData();\r\n\r\n      // Demo data loaded successfully - logged via logger service\r\n    } catch (error) {\r\n      // Error loading demo data - will be handled by error handler\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async loadData(): Promise<void> {\r\n    if (!this.persistence || !this.document) {\r\n      // Cannot load data - persistence or document not available\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const graph = await this.persistence.load(this.document);\r\n      this.elements = graph.elements || { nodes: [], edges: [] };\r\n      this.style = graph.style || [];\r\n    } catch (err) {\r\n      // Error loading data - will be handled by error handler\r\n      this.elements = { nodes: [], edges: [] };\r\n      this.style = [];\r\n    }\r\n  }\r\n\r\n  async saveData(): Promise<void> {\r\n    if (!this.persistence || !this.document) {\r\n      // Cannot save data - persistence or document not available\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.persistence.save(this.document, {\r\n        elements: this.elements,\r\n        style: this.style || [],\r\n      });\r\n    } catch (error) {\r\n      // Error saving data - will be handled by error handler\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Cleanup\r\n  cleanup(): void {\r\n    this.elements.nodes = [];\r\n    this.elements.edges = [];\r\n    this.style = [];\r\n  }\r\n}\r\n","import type { IDocument, RelationshipGraphData } from \"../global\";\r\nimport type { IRelationshipGraphPersistenceService } from \"./IRelationshipGraphPersistenceService\";\r\nimport type { IFoundryAdapter } from \"../core/adapters/IFoundryAdapter\";\r\n\r\nexport class RelationshipGraphPersistenceService implements IRelationshipGraphPersistenceService {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'persistenceService';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n  \r\n  constructor(private foundryAdapter: IFoundryAdapter) {}\r\n  \r\n  async load(document: IDocument): Promise<RelationshipGraphData> {\r\n    const documentUuid = (document as any).uuid;\r\n    const freshDocument = await this.foundryAdapter.loadDocument(documentUuid);\r\n    const system = freshDocument?.system ?? document.system;\r\n\r\n    // Lade elements und style aus dem system\r\n    const elements = system.elements || { nodes: [], edges: [] };\r\n    const style = system.style || [];\r\n\r\n    return {\r\n      description: system.description,\r\n      version: system.version,\r\n      created: system.created,\r\n      modified: system.modified,\r\n      elements: elements,\r\n      style: style,\r\n    };\r\n  }\r\n\r\n  async save(document: IDocument, data: Partial<RelationshipGraphData> | object): Promise<void> {\r\n    // Type guard to check if data has elements property\r\n    const hasElements = (obj: any): obj is { elements?: { nodes: any[]; edges: any[] } } => {\r\n      return obj && typeof obj === \"object\" && \"elements\" in obj;\r\n    };\r\n\r\n    const elements = hasElements(data) ? data.elements : { nodes: [], edges: [] };\r\n\r\n    // â Verwende den neuen Wrapper mit automatischem Reload\r\n    await this.foundryAdapter.updateDocumentWithReload(document, {\r\n      \"system.elements\": elements,\r\n    });\r\n  }\r\n\r\n  // Data Export/Import\r\n  async export(format: \"json\" | \"png\" | \"svg\"): Promise<any> {\r\n    // This would be implemented based on the format\r\n    switch (format) {\r\n      case \"json\":\r\n        return { format: \"json\", data: \"exported data\" };\r\n      case \"png\":\r\n        return { format: \"png\", data: \"exported image\" };\r\n      case \"svg\":\r\n        return { format: \"svg\", data: \"exported svg\" };\r\n      default:\r\n        throw new Error(`Unsupported export format: ${format}`);\r\n    }\r\n  }\r\n\r\n  async import(data: any): Promise<void> {\r\n    // Validate and import data\r\n    if (!this.validateData(data)) {\r\n      throw new Error(\"Invalid import data\");\r\n    }\r\n\r\n    const sanitizedData = this.sanitizeData(data);\r\n    // Process the imported data\r\n    // Data imported successfully\r\n  }\r\n\r\n  // Backup and Restore\r\n  async createBackup(): Promise<RelationshipGraphData> {\r\n    // Create a backup of current data\r\n    return {\r\n      description: \"Backup\",\r\n      version: \"1.0.0\",\r\n      created: Date.now(),\r\n      modified: Date.now(),\r\n      elements: { nodes: [], edges: [] },\r\n      style: [],\r\n    };\r\n  }\r\n\r\n  async restoreFromBackup(backup: RelationshipGraphData): Promise<void> {\r\n    // Restore from backup\r\n    // Backup restored successfully\r\n  }\r\n\r\n  // Data Validation\r\n  validateData(data: any): boolean {\r\n    if (!data || typeof data !== \"object\") {\r\n      return false;\r\n    }\r\n\r\n    // Check for required structure - support both old and new format\r\n    if (\r\n      data.elements &&\r\n      data.elements.nodes &&\r\n      Array.isArray(data.elements.nodes) &&\r\n      data.elements.edges &&\r\n      Array.isArray(data.elements.edges) &&\r\n      data.style &&\r\n      Array.isArray(data.style)\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    // Legacy support for old format\r\n    if (data.nodes && Array.isArray(data.nodes) && data.edges && Array.isArray(data.edges)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  sanitizeData(data: any): RelationshipGraphData {\r\n    // Sanitize and clean the data\r\n    let nodes: any[] = [];\r\n    let edges: any[] = [];\r\n    let style: any[] = [];\r\n\r\n    // Support both old and new format\r\n    if (data.elements && data.elements.nodes && Array.isArray(data.elements.nodes)) {\r\n      nodes = data.elements.nodes;\r\n    } else if (Array.isArray(data.nodes)) {\r\n      nodes = data.nodes;\r\n    }\r\n\r\n    if (data.elements && data.elements.edges && Array.isArray(data.elements.edges)) {\r\n      edges = data.elements.edges;\r\n    } else if (Array.isArray(data.edges)) {\r\n      edges = data.edges;\r\n    }\r\n\r\n    if (data.style && Array.isArray(data.style)) {\r\n      style = data.style;\r\n    }\r\n\r\n    const sanitized: RelationshipGraphData = {\r\n      description: data.description || \"Sanitized Graph\",\r\n      version: data.version || \"1.0.0\",\r\n      created: data.created || Date.now(),\r\n      modified: data.modified || Date.now(),\r\n      elements: {\r\n        nodes: nodes,\r\n        edges: edges,\r\n      },\r\n      style: style,\r\n    };\r\n\r\n    // Additional sanitization logic here\r\n    return sanitized;\r\n  }\r\n\r\n  // Cleanup\r\n  cleanup(): void {\r\n    // Cleanup any resources\r\n    // Persistence service cleanup completed\r\n  }\r\n}\r\n","import type { IRelationshipGraphDemoDataService } from \"./IRelationshipGraphDemoDataService\";\r\nimport type { IRelationshipGraphService } from \"./IRelationshipGraphService\";\r\nimport type { IFoundryAdapter } from \"../core/adapters/IFoundryAdapter\";\r\n\r\nexport class RelationshipGraphDemoDataService implements IRelationshipGraphDemoDataService {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'demoDataService';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n  \r\n  constructor(private foundryAdapter: IFoundryAdapter) {}\r\n  \r\n  getDemoData(): { nodes: any[]; edges: any[] } {\r\n    const node1Id = this.foundryAdapter.generateId();\r\n    const node2Id = this.foundryAdapter.generateId();\r\n\r\n    // Direkt minimale Cytoscape-Daten erstellen\r\n    const nodes = [\r\n      {\r\n        data: {\r\n          id: node1Id,\r\n          label: \"Bauer\",\r\n        },\r\n        position: {\r\n          x: 100,\r\n          y: 100,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: node2Id,\r\n          label: \"MÃ¼ller\",\r\n        },\r\n        position: {\r\n          x: 300,\r\n          y: 100,\r\n        },\r\n      },\r\n    ];\r\n\r\n    const edges = [\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: node1Id,\r\n          target: node2Id,\r\n          label: \"Weizen\",\r\n        },\r\n      },\r\n    ];\r\n\r\n    return { nodes, edges };\r\n  }\r\n\r\n  async createDemoData(service: IRelationshipGraphService): Promise<void> {\r\n    const demoData = this.getDemoData();\r\n\r\n    // Speichere elements und style direkt in das Journal Entry\r\n    if (service.getDocument()) {\r\n      // â Verwende den neuen Wrapper mit automatischem Reload\r\n      await this.foundryAdapter.updateDocumentWithReload(service.getDocument(), {\r\n        \"system.elements\": demoData,\r\n        \"system.style\": [],\r\n      });\r\n    }\r\n  }\r\n\r\n  // Demo Data Templates\r\n  createSimpleDemo(): { nodes: any[]; edges: any[] } {\r\n    const node1Id = this.foundryAdapter.generateId();\r\n    const node2Id = this.foundryAdapter.generateId();\r\n\r\n    const nodes = [\r\n      {\r\n        data: {\r\n          id: node1Id,\r\n          label: \"Node 1\",\r\n        },\r\n        position: {\r\n          x: 100,\r\n          y: 100,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: node2Id,\r\n          label: \"Node 2\",\r\n        },\r\n        position: {\r\n          x: 300,\r\n          y: 100,\r\n        },\r\n      },\r\n    ];\r\n\r\n    const edges = [\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: node1Id,\r\n          target: node2Id,\r\n          label: \"Connection\",\r\n        },\r\n      },\r\n    ];\r\n\r\n    return { nodes, edges };\r\n  }\r\n\r\n  createComplexDemo(): { nodes: any[]; edges: any[] } {\r\n    const nodes = Array.from({ length: 10 }, (_, i) => {\r\n      const nodeId = this.foundryAdapter.generateId();\r\n      return {\r\n        data: {\r\n          id: nodeId,\r\n          label: `Complex Node ${i + 1}`,\r\n        },\r\n        position: {\r\n          x: 100 + i * 80,\r\n          y: 100 + i * 60,\r\n        },\r\n      };\r\n    });\r\n\r\n    const edges = [];\r\n    for (let i = 0; i < nodes.length - 1; i++) {\r\n      edges.push({\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: nodes[i].data.id,\r\n          target: nodes[i + 1].data.id,\r\n          label: `Edge ${i + 1}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return { nodes, edges };\r\n  }\r\n\r\n  createCharacterDemo(): { nodes: any[]; edges: any[] } {\r\n    const heroId = this.foundryAdapter.generateId();\r\n    const villainId = this.foundryAdapter.generateId();\r\n    const allyId = this.foundryAdapter.generateId();\r\n\r\n    const nodes = [\r\n      {\r\n        data: {\r\n          id: heroId,\r\n          label: \"Hero\",\r\n        },\r\n        position: {\r\n          x: 200,\r\n          y: 200,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: villainId,\r\n          label: \"Villain\",\r\n        },\r\n        position: {\r\n          x: 400,\r\n          y: 150,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: allyId,\r\n          label: \"Ally\",\r\n        },\r\n        position: {\r\n          x: 300,\r\n          y: 300,\r\n        },\r\n      },\r\n    ];\r\n\r\n    const edges = [\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: heroId,\r\n          target: villainId,\r\n          label: \"Fights\",\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: heroId,\r\n          target: allyId,\r\n          label: \"Helps\",\r\n        },\r\n      },\r\n    ];\r\n\r\n    return { nodes, edges };\r\n  }\r\n\r\n  createWorldDemo(): { nodes: any[]; edges: any[] } {\r\n    const cityId = this.foundryAdapter.generateId();\r\n    const villageId = this.foundryAdapter.generateId();\r\n    const fortressId = this.foundryAdapter.generateId();\r\n\r\n    const nodes = [\r\n      {\r\n        data: {\r\n          id: cityId,\r\n          label: \"Capital City\",\r\n        },\r\n        position: {\r\n          x: 300,\r\n          y: 200,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: villageId,\r\n          label: \"Forest Village\",\r\n        },\r\n        position: {\r\n          x: 100,\r\n          y: 100,\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: fortressId,\r\n          label: \"Mountain Fortress\",\r\n        },\r\n        position: {\r\n          x: 500,\r\n          y: 300,\r\n        },\r\n      },\r\n    ];\r\n\r\n    const edges = [\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: cityId,\r\n          target: villageId,\r\n          label: \"Trade Route\",\r\n        },\r\n      },\r\n      {\r\n        data: {\r\n          id: this.foundryAdapter.generateId(),\r\n          source: cityId,\r\n          target: fortressId,\r\n          label: \"Military Road\",\r\n        },\r\n      },\r\n    ];\r\n\r\n    return { nodes, edges };\r\n  }\r\n\r\n  // Demo Data Management\r\n  async clearDemoData(service: IRelationshipGraphService): Promise<void> {\r\n    // LÃ¶sche alle Elements und Style aus dem Journal Entry\r\n    if (service.getDocument()) {\r\n      await this.foundryAdapter.updateDocument(service.getDocument(), {\r\n        \"system.elements\": { nodes: [], edges: [] },\r\n        \"system.style\": [],\r\n      });\r\n    }\r\n  }\r\n\r\n  hasDemoData(service: IRelationshipGraphService): boolean {\r\n    const document = service.getDocument();\r\n    if (!document) return false;\r\n\r\n    const elements = (document.system as any)?.elements;\r\n    if (!elements) return false;\r\n\r\n    return (\r\n      (elements.nodes && elements.nodes.length > 0) || (elements.edges && elements.edges.length > 0)\r\n    );\r\n  }\r\n\r\n  // Demo Data Configuration\r\n  private currentTemplate: string = \"simple\";\r\n\r\n  setDemoDataTemplate(template: \"simple\" | \"complex\" | \"character\" | \"world\"): void {\r\n    this.currentTemplate = template;\r\n  }\r\n\r\n  getCurrentTemplate(): string {\r\n    return this.currentTemplate;\r\n  }\r\n\r\n  // Cleanup\r\n  cleanup(): void {\r\n    // Reset to default template\r\n    this.currentTemplate = \"simple\";\r\n  }\r\n}\r\n","import type { INotificationService } from \"./INotificationService\";\r\nimport type { IFoundryAdapter } from \"../core/adapters/IFoundryAdapter\";\r\nimport type { ILogger } from \"../core/interfaces/ILogger\";\r\n\r\nexport class NotificationService implements INotificationService {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'notificationService';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n  \r\n  constructor(\r\n    private readonly foundryAdapter: IFoundryAdapter,\r\n    private readonly logger: ILogger\r\n  ) {}\r\n  \r\n  showSuccess(message: string): void {\r\n    this.foundryAdapter.showSuccess(message);\r\n    this.logger.info(`[UI] Success: ${message}`);\r\n  }\r\n  \r\n  showError(message: string): void {\r\n    this.foundryAdapter.showError(`â ${message}`);\r\n    this.logger.error(`[UI] Error: ${message}`);\r\n  }\r\n  \r\n  showWarning(message: string): void {\r\n    this.foundryAdapter.showWarning(`â ï¸ ${message}`);\r\n    this.logger.warn(`[UI] Warning: ${message}`);\r\n  }\r\n  \r\n  showInfo(message: string): void {\r\n    this.foundryAdapter.showInfo(`â¹ï¸ ${message}`);\r\n    this.logger.info(`[UI] Info: ${message}`);\r\n  }\r\n}\r\n","import type { ILogger } from \"../interfaces/ILogger\";\r\nimport { BaseService } from \"../../services/IServiceFactory\";\r\nimport type { IFoundryAdapter } from \"../adapters/IFoundryAdapter\";\r\nimport { MODULE_ID_PREFIX } from \"../../constants\";\r\n\r\nexport class FoundryLogger extends BaseService implements ILogger {\r\n  // â Metadaten automatisch durch BaseService erzwungen\r\n  readonly API_NAME = 'logger';\r\n  readonly SERVICE_TYPE = 'singleton' as const;\r\n\r\n  constructor(private foundryAdapter: IFoundryAdapter) {\r\n    super();\r\n  }\r\n\r\n  info(message: string): void {\r\n    console.log(`${MODULE_ID_PREFIX} â¹ï¸ ${message}`);\r\n  }\r\n\r\n  warn(message: string): void {\r\n    console.warn(`${MODULE_ID_PREFIX} â ï¸ ${message}`);\r\n  }\r\n\r\n  error(message: string, error?: any): void {\r\n    console.error(`${MODULE_ID_PREFIX} â ${message}`);\r\n    if (error) {\r\n      console.error(`${MODULE_ID_PREFIX} Full error details:`, error);\r\n    }\r\n  }\r\n\r\n  debug(message: string): void {\r\n    if (this.foundryAdapter.getSetting('debug') === true) {\r\n      console.debug(`${MODULE_ID_PREFIX} ð ${message}`);\r\n    }\r\n  }\r\n}\r\n","import type { IErrorHandler } from \"../interfaces/IErrorHandler\";\r\nimport type { ILogger } from \"../interfaces/ILogger\";\r\nimport type { IFoundryAdapter } from \"../adapters/IFoundryAdapter\";\r\n\r\nexport class ConsoleErrorHandler implements IErrorHandler {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'errorHandler';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n\r\n  constructor(\r\n    private readonly logger: ILogger,\r\n    private readonly foundryAdapter: IFoundryAdapter\r\n  ) {}\r\n\r\n  handle(error: any, context: string): void {\r\n    this.logger.error(`Error in ${context}: ${error.message || error}`, error);\r\n    \r\n    // Show Foundry notification\r\n    this.foundryAdapter.showError(`Relationship App: Error in ${context}`);\r\n  }\r\n\r\n  async handleAsync<T>(operation: () => Promise<T>, context: string): Promise<T> {\r\n    try {\r\n      return await operation();\r\n    } catch (error) {\r\n      this.handle(error, context);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import type { IModuleInitializer } from \"../interfaces/IModuleInitializer\";\r\nimport type { IRegistrationService } from \"../interfaces/IRegistrationService\";\r\nimport type { ILogger } from \"../interfaces/ILogger\";\r\nimport type { IErrorHandler } from \"../interfaces/IErrorHandler\";\r\n\r\nexport class ModuleInitializer implements IModuleInitializer {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'moduleInitializer';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n\r\n  constructor(\r\n    private readonly logger: ILogger,\r\n    private readonly errorHandler: IErrorHandler,\r\n    private readonly registrationService: IRegistrationService\r\n  ) {}\r\n\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      this.logger.info(\"ð Relationship App: Starting initialization...\");\r\n      \r\n      // Register all Foundry integrations\r\n      await this.registrationService.registerAll();\r\n      \r\n      this.logger.info(\"â Relationship App: Initialization completed!\");\r\n    } catch (error) {\r\n      this.errorHandler.handle(error, \"Module initialization\");\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","<script lang=\"ts\">\n  let {\n    elements,\n    interactive,\n    onNodeClick,\n    onEdgeClick,\n  }: {\n    elements: any[];\n    interactive: boolean;\n    onNodeClick: (nodeId: string) => void;\n    onEdgeClick: (edgeId: string) => void;\n  } = $props();\n\n  console.log(\"RelationshipGraphView\", elements);\n  console.log(\"RelationshipGraphView\", interactive);\n  console.log(\"RelationshipGraphView\", onNodeClick);\n  console.log(\"RelationshipGraphView\", onEdgeClick);\n\n</script>\n\n<div class=\"relationship-graph-view\">\n  <div class=\"graph-container\">\n    <div> Platzhalter fÃ¼r Graph</div>\n    <!-- <CytoscapeGraph\n      width=\"800px\"\n      height=\"600px\"\n      {elements}\n      {interactive}\n      onNodeClick={handleNodeClick}\n      onEdgeClick={handleEdgeClick}\n    /> -->\n  </div>\n  \n  <div class=\"info-container\">\n    <div> Platzhalter fÃ¼r Info-Panel</div>\n  </div>\n</div>\n\n<style>\n  .relationship-graph-view {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n    height: 100vh;\n  }\n\n  .graph-container {\n    flex: 1;\n    min-height: 0;\n  }\n\n  .info-container {\n    height: 300px;\n    min-height: 300px;\n  }\n</style>\n","<script lang=\"ts\">\n  let {\n    elements,\n    interactive,\n    onNodeClick,\n    onEdgeClick,\n  }: {\n    elements: any[];\n    interactive: boolean;\n    onNodeClick: (nodeId: string) => void;\n    onEdgeClick: (edgeId: string) => void;\n  } = $props();\n\n  console.log(\"RelationshipGraphView\", elements);\n  console.log(\"RelationshipGraphView\", interactive);\n  console.log(\"RelationshipGraphView\", onNodeClick);\n  console.log(\"RelationshipGraphView\", onEdgeClick);\n\n</script>\n\n<div class=\"relationship-graph-view\">\n  <div class=\"graph-container\">\n    <div> Platzhalter fÃ¼r Graph</div>\n  </div>\n  \n  <div class=\"info-container\">\n    <div> Platzhalter fÃ¼r Info-Panel</div>\n  </div>\n</div>\n\n<style>\n  .relationship-graph-view {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n  }\n</style>\n","import RelationshipGraphView from \"../svelte/RelationshipGraphView.svelte\";\r\nimport RelationshipGraphEdit from \"../svelte/RelationshipGraphEdit.svelte\";\r\nimport { RelationshipGraphDemoDataService } from \"../services/RelationshipGraphDemoDataService\";\r\nimport { RelationshipGraphService } from \"../services/RelationshipGraphService\";\r\nimport { RelationshipGraphPersistenceService } from \"../services/RelationshipGraphPersistenceService\";\r\nimport { mount, unmount } from \"svelte\";\r\n\r\n/**\r\n * V2 JournalEntryPageSheet subclass drawing a simple relationship graph.\r\n * @extends JournalEntryPageSheet\r\n */\r\nexport default class JournalEntryPageRelationshipGraphSheet extends foundry.applications.sheets\r\n  .journal.JournalEntryPageHandlebarsSheet {\r\n  /**\r\n   * Merge the default parts, inserting our graph part between header and footer.\r\n   */\r\n  static EDIT_PARTS = (() => {\r\n    const parts = (foundry.applications.sheets.journal.JournalEntryPageHandlebarsSheet as any)\r\n      .EDIT_PARTS as Record<string, { template: string }>;\r\n    const { header, footer, ...rest } = parts;\r\n    return {\r\n      header,\r\n      content: {\r\n        template:\r\n          \"modules/relationship-app/templates/journal-entry-relationship-graph-edit-part.hbs\",\r\n      },\r\n      ...rest,\r\n      footer,\r\n    };\r\n  })();\r\n\r\n  static VIEW_PARTS = (() => {\r\n    // Use the base EDIT_PARTS to ensure header and footer exist for view mode\r\n    const parts = (foundry.applications.sheets.journal.JournalEntryPageHandlebarsSheet as any)\r\n      .VIEW_PARTS as Record<string, { template: string }>;\r\n    return {\r\n      ...parts,\r\n      content: {\r\n        template:\r\n          \"modules/relationship-app/templates/journal-entry-relationship-graph-view-part.hbs\",\r\n      },\r\n    };\r\n  })();\r\n\r\n  svelteApp: any = null;\r\n\r\n  /** @override */\r\n  static DEFAULT_OPTIONS = {\r\n    // Unique ID for the sheet\r\n    id: \"journal-entry-relationship-graph\",\r\n    // CSS classes to apply\r\n    classes: [\"journal-entry-page\", \"relationship-graph\"],\r\n    type: \"relationship-app.relationship-graph\",\r\n    // Window sizing and behavior\r\n    position: { width: 800, height: 600 },\r\n    window: { title: \"Beziehungsgraph\" },\r\n    resizable: true,\r\n    includeTOC: true,\r\n  };\r\n\r\n  /** @override */\r\n  get title() {\r\n    return this.options.window.title;\r\n  }\r\n\r\n  /** @override */\r\n  async _renderHTML(context: any, options: any) {\r\n    // Delegate template rendering to HandlebarsApplicationMixin\r\n    return await super._renderHTML(context, options);\r\n  }\r\n\r\n  /** @override */\r\n  _replaceHTML(html: any, options: any, context: any) {\r\n    // Replace rendered HTML via HandlebarsApplicationMixin\r\n    return super._replaceHTML(html, options, context);\r\n  }\r\n\r\n  async _preparePartContext(partContext: any, part: any, options: any) {\r\n    const context = await super._preparePartContext(partContext, part, options);\r\n    return context;\r\n  }\r\n\r\n  async _prepareContext(options: any) {\r\n    const context = await super._prepareContext(options);\r\n    console.log(\r\n      \"[JournalEntryPageRelationshipGraphSheet] _prepareContext called with context:\",\r\n      context\r\n    );\r\n    return context;\r\n  }\r\n\r\n  async _onRender(context: any, options: any) {\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] _onRender started\", { context, options });\r\n\r\n    await super._onRender(context, options);\r\n    const target = this.element.querySelector(\"#relationship-graph-svelte\");\r\n    if (!target) {\r\n      console.warn(\"[JournalEntryPageRelationshipGraphSheet] Svelte mount point not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] Found target element:\", target);\r\n\r\n    // Unmount existing instance\r\n    if (this.svelteApp) {\r\n      console.log(\"[JournalEntryPageRelationshipGraphSheet] Unmounting existing Svelte app\");\r\n      await unmount(this.svelteApp);\r\n      this.svelteApp = null;\r\n    }\r\n\r\n    // Get the journal entry page UUID - this.document is a JournalEntryPage with the system data\r\n    const journalEntryPage = (this as any).document;\r\n    const graphJournalUuid = journalEntryPage.uuid;\r\n    let system = (await foundry.utils.fromUuid(graphJournalUuid))?.system;\r\n\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] Journal Entry UUID:\", graphJournalUuid);\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] System:\", system);\r\n\r\n    const relationshipGraphPersistenceService = new RelationshipGraphPersistenceService();\r\n    const relationshipGraphService = new RelationshipGraphService(\r\n      journalEntryPage as any,\r\n      relationshipGraphPersistenceService\r\n    );\r\n\r\n    if (\r\n      !system ||\r\n      !(system as any).elements ||\r\n      !(system as any).elements.nodes ||\r\n      !(system as any).elements.edges ||\r\n      (system as any).elements.nodes.length === 0 ||\r\n      (system as any).elements.edges.length === 0\r\n    ) {\r\n      const demoDataService = new RelationshipGraphDemoDataService();\r\n      await demoDataService.createDemoData(relationshipGraphService);\r\n      system = (await foundry.utils.fromUuid(graphJournalUuid))?.system;\r\n    }\r\n\r\n    const elements = (system as any).elements;\r\n\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] Elements:\", elements);\r\n\r\n    // Mount the new RelationshipGraphView component\r\n    this.svelteApp = mount((this as any).isView ? RelationshipGraphView : RelationshipGraphEdit, {\r\n      target,\r\n      props: {\r\n        elements: elements,\r\n        interactive: false,\r\n        onNodeClick: () => {},\r\n        onEdgeClick: () => {},\r\n      },\r\n    });\r\n\r\n    console.log(\r\n      \"[JournalEntryPageRelationshipGraphSheet] RelationshipGraphView mounted successfully\"\r\n    );\r\n  }\r\n\r\n  /** @override */\r\n  async _onClose(options: any) {\r\n    console.log(\"[JournalEntryPageRelationshipGraphSheet] _onClose called with options:\", options);\r\n    if (this.svelteApp) {\r\n      await unmount(this.svelteApp);\r\n      this.svelteApp = null;\r\n    } else {\r\n    }\r\n    return super._onClose(options);\r\n  }\r\n}\r\n","const fields = foundry.data.fields;\r\n\r\nexport class RelationshipGraphModel extends foundry.abstract.TypeDataModel<any, any, any, any> {\r\n  static defineSchema() {\r\n    return {\r\n      // GRAPH METADATA\r\n      // Beschreibung des Graphen\r\n      description: new fields.HTMLField({ required: false, blank: true }),\r\n      // Version des Graphen\r\n      version: new fields.StringField({ required: false, blank: true, initial: \"1.0.0\" }),\r\n      // Erstellungsdatum\r\n      created: new fields.NumberField({ required: false, blank: true }),\r\n      // Letzte Ãnderung\r\n      modified: new fields.NumberField({ required: false, blank: true }),\r\n\r\n      // CYTOGRAPHE ELEMENTS direkt als JSON\r\n      elements: new fields.ObjectField({\r\n        required: true,\r\n        blank: true,\r\n        initial: {\r\n          nodes: [],\r\n          edges: [],\r\n        },\r\n      }),\r\n\r\n      // CYTOGRAPHE STYLE als JSON\r\n      style: new fields.ArrayField(new fields.ObjectField({ required: true }), {\r\n        required: true,\r\n        blank: true,\r\n        initial: [],\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import JournalEntryPageRelationshipGraphSheet from \"../applications/JournalEntryPageRelationshipGraphSheet\";\r\nimport { RelationshipGraphModel } from \"../models/RelationsShipGraphModel\";\r\nimport { ServiceFactory } from \"./ServiceFactory\";\r\nimport { MODULE_ID, MODULE_METADATA_KEY } from \"../constants\";\r\nimport type { ILogger } from \"../core/interfaces/ILogger\";\r\nimport type { IErrorHandler } from \"../core/interfaces/IErrorHandler\";\r\nimport type { IRegistrationService } from \"../core/interfaces/IRegistrationService\";\r\n\r\nexport class RegistrationService implements IRegistrationService {\r\n  // â Metadaten direkt in der Klasse\r\n  static readonly API_NAME = 'registrationService';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n  \r\n  constructor(\r\n    private readonly logger: ILogger,\r\n    private readonly errorHandler: IErrorHandler\r\n  ) {}\r\n\r\n  async registerAll(): Promise<void> {\r\n    try {\r\n      await this.registerSheet();\r\n      await this.registerModel();\r\n      await this.registerMetadata();\r\n      await this.registerServices();\r\n    } catch (error) {\r\n      this.errorHandler.handle(error, \"RegistrationService.registerAll\");\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async registerSheet(): Promise<void> {\r\n    this.logger.info(\"ð Relationship App: Registering JournalEntryPageRelationshipGraphSheet...\");\r\n    const DocumentSheetConfig = foundry.applications.apps.DocumentSheetConfig;\r\n    DocumentSheetConfig.registerSheet(\r\n      JournalEntryPage,\r\n      \"relationship-app\",\r\n      JournalEntryPageRelationshipGraphSheet,\r\n      {\r\n        types: [\"relationship-app.relationship-graph\"],\r\n        makeDefault: true,\r\n        label: () => {\r\n          return (\r\n            game?.i18n?.format(\"TYPES.JournalEntryPage.relationship-graph\", {\r\n              page: game?.i18n?.localize(\"TYPES.JournalEntryPage.relationship-graph\"),\r\n            }) || \"Relationship Graph\"\r\n          );\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  private async registerModel(): Promise<void> {\r\n    this.logger.info(\"ð Relationship App: Registering RelationshipGraphModel...\");\r\n    CONFIG.JournalEntryPage.dataModels[\"relationship-app.relationship-graph\"] =\r\n      RelationshipGraphModel;\r\n  }\r\n\r\n  private async registerMetadata(): Promise<void> {\r\n    this.logger.info(\"ð Relationship App: Registering metadata...\");\r\n    game?.settings?.register(MODULE_ID as any, MODULE_METADATA_KEY as any, {\r\n      name: \"Relationship App Metadata\",\r\n      hint: \"Metadata for the Relationship App\",\r\n      scope: \"world\",\r\n      config: false,\r\n      type: Object,\r\n    });\r\n  }\r\n\r\n  private async registerServices(): Promise<void> {\r\n    this.logger.info(\"ð Relationship App: Registering services in global API...\");\r\n\r\n    // ServiceFactory registriert alle Services automatisch\r\n    const serviceFactory = ServiceFactory.getInstance();\r\n    serviceFactory.registerAllServicesInAPI();\r\n\r\n    this.logger.info(\"â Relationship App: All services registered successfully\");\r\n  }\r\n}\r\n","import type { IFoundryAdapter } from \"./IFoundryAdapter\";\r\nimport { MODULE_ID } from \"../../constants\";\r\n\r\n/**\r\n * Foundry VTT API Adapter fÃ¼r Version 13\r\n * \r\n * Zentralisiert alle Foundry-Aufrufe und abstrahiert die API.\r\n * Bei Foundry-Updates muss nur diese Klasse angepasst werden.\r\n * \r\n * TODO: Bei Foundry v14+ Feature Detection implementieren:\r\n * \r\n * ```typescript\r\n * private hasNewAPI(): boolean {\r\n *   return typeof foundry.utils.generateId === 'function';\r\n * }\r\n * \r\n * generateId(): string {\r\n *   if (this.hasNewAPI()) {\r\n *     return foundry.utils.generateId(); // v14+\r\n *   }\r\n *   return foundry.utils.randomID(); // v13\r\n * }\r\n * ```\r\n */\r\nexport class FoundryAdapter implements IFoundryAdapter {\r\n\r\n  static readonly API_NAME = 'foundryAdapter';\r\n  static readonly SERVICE_TYPE = 'singleton' as const;\r\n\r\n  // Utils\r\n  generateId(): string {\r\n    return foundry.utils.randomID();\r\n  }\r\n  \r\n  async loadDocument(uuid: string): Promise<any> {\r\n    return await foundry.utils.fromUuid(uuid as any);\r\n  }\r\n  \r\n  // UI Notifications\r\n  showInfo(message: string): void {\r\n    ui?.notifications?.info(message);\r\n  }\r\n  \r\n  showError(message: string): void {\r\n    ui?.notifications?.error(message);\r\n  }\r\n  \r\n  showWarning(message: string): void {\r\n    ui?.notifications?.warn(message);\r\n  }\r\n  \r\n  showSuccess(message: string): void {\r\n    ui?.notifications?.info(`â ${message}`);\r\n  }\r\n  \r\n  // Hooks\r\n  onInit(callback: () => void): void {\r\n    Hooks.once(\"init\", callback);\r\n  }\r\n  \r\n  onReady(callback: () => Promise<void>): void {\r\n    Hooks.once(\"ready\", callback);\r\n  }\r\n  \r\n  // Document Operations\r\n  async updateDocument(document: any, data: any): Promise<any> {\r\n    return await document.update(data);\r\n  }\r\n\r\n  /**\r\n   * Update-Dokument mit automatischem Reload fÃ¼r Datenkonsistenz\r\n   * \r\n   * LÃ¤dt das Dokument vor dem Update neu, um sicherzustellen,\r\n   * dass die neuesten Daten verwendet werden. Ideal fÃ¼r Multi-User-Szenarien.\r\n   * \r\n   * @param document - Das zu aktualisierende Dokument\r\n   * @param data - Die zu speichernden Daten\r\n   * @returns Promise mit dem aktualisierten Dokument\r\n   */\r\n  async updateDocumentWithReload(document: any, data: any): Promise<any> {\r\n    try {\r\n      // Lade das Dokument neu fÃ¼r Datenkonsistenz\r\n      const documentUuid = document.uuid;\r\n      const freshDocument = await this.loadDocument(documentUuid);\r\n      \r\n      if (freshDocument) {\r\n        // â Update mit frischen Daten\r\n        return await freshDocument.update(data);\r\n      } else {\r\n        // â Fallback: Direktes Update wenn Reload fehlschlÃ¤gt\r\n        return await document.update(data);\r\n      }\r\n    } catch (error) {\r\n      // â Error Handling mit Fallback\r\n      console.warn(\"Failed to reload document, using direct update:\", error);\r\n      return await document.update(data);\r\n    }\r\n  }\r\n  \r\n  // Settings Operations\r\n  registerSetting(key: string, config: any): void {\r\n    game?.settings?.register(MODULE_ID as any, key as any, config);\r\n  }\r\n  \r\n  getSetting(key: string): any {\r\n    return game?.settings?.get(MODULE_ID as any, key as any);\r\n  }\r\n  \r\n  async setSetting(key: string, value: any): Promise<any> {\r\n    return await game?.settings?.set(MODULE_ID as any, key as any, value);\r\n  }\r\n}\r\n","import type { IServiceFactory, ServiceConstructor } from \"./IServiceFactory\";\r\nimport { SERVICE_IDENTIFIERS } from \"./IServiceFactory\";\r\nimport { ServiceManager } from \"./ServiceManager\";\r\n\r\n// Re-export SERVICE_IDENTIFIERS for convenience\r\nexport { SERVICE_IDENTIFIERS };\r\nimport { RelationshipGraphService } from \"./RelationshipGraphService\";\r\nimport { RelationshipGraphPersistenceService } from \"./RelationshipGraphPersistenceService\";\r\nimport { RelationshipGraphDemoDataService } from \"./RelationshipGraphDemoDataService\";\r\nimport { NotificationService } from \"./NotificationService\";\r\nimport { FoundryLogger } from \"../core/services/FoundryLogger\";\r\nimport { ConsoleErrorHandler } from \"../core/services/ConsoleErrorHandler\";\r\nimport { ModuleInitializer } from \"../core/services/ModuleInitializer\";\r\nimport { RegistrationService } from \"./RegistrationService\";\r\nimport { FoundryAdapter } from \"../core/adapters/FoundryAdapter\";\r\n\r\nexport class ServiceFactory implements IServiceFactory {\r\n  private static instance: ServiceFactory;\r\n  private readonly serviceRegistry = new Map<string, ServiceConstructor>();\r\n  private crossCuttingServices: Map<string, any> = new Map();\r\n\r\n  private constructor() {\r\n    this.initializeCrossCuttingServices();\r\n    this.registerDefaultServices();\r\n  }\r\n\r\n  static getInstance(): ServiceFactory {\r\n    if (!ServiceFactory.instance) {\r\n      ServiceFactory.instance = new ServiceFactory();\r\n    }\r\n    return ServiceFactory.instance;\r\n  }\r\n\r\n  registerService<T>(identifier: string, constructor: ServiceConstructor<T>): void {\r\n    this.serviceRegistry.set(identifier, constructor);\r\n  }\r\n\r\n  createService<T>(identifier: string, ...args: any[]): T {\r\n    const ServiceConstructor = this.serviceRegistry.get(identifier);\r\n    if (!ServiceConstructor) {\r\n      throw new Error(\r\n        `Service '${identifier}' is not registered. Available services: ${this.getRegisteredServices().join(\", \")}`\r\n      );\r\n    }\r\n    return new ServiceConstructor(...args) as T;\r\n  }\r\n\r\n  hasService(identifier: string): boolean {\r\n    return this.serviceRegistry.has(identifier);\r\n  }\r\n\r\n  getRegisteredServices(): string[] {\r\n    return Array.from(this.serviceRegistry.keys());\r\n  }\r\n\r\n  // Cross-Cutting Services sofort erstellen\r\n  private initializeCrossCuttingServices(): void {\r\n    // FoundryAdapter zuerst erstellen (keine Dependencies)\r\n    const foundryAdapter = new FoundryAdapter();\r\n    this.crossCuttingServices.set(SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER, foundryAdapter);\r\n    \r\n    // Logger mit FoundryAdapter erstellen\r\n    const logger = new FoundryLogger(foundryAdapter);\r\n    this.crossCuttingServices.set(SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, logger);\r\n    \r\n    // ErrorHandler mit Logger und FoundryAdapter erstellen\r\n    const errorHandler = new ConsoleErrorHandler(logger, foundryAdapter);\r\n    this.crossCuttingServices.set(SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER, errorHandler);\r\n  }\r\n\r\n  // Cross-Cutting Services sofort verfÃ¼gbar\r\n  getCrossCuttingService<T>(identifier: string): T {\r\n    const service = this.crossCuttingServices.get(identifier);\r\n    if (!service) {\r\n      throw new Error(`Cross-cutting service '${identifier}' not initialized`);\r\n    }\r\n    return service as T;\r\n  }\r\n\r\n  // Register all services in ServiceManager\r\n  registerAllServicesInServiceManager(serviceManager: ServiceManager): void {\r\n    // Alle Services automatisch im ServiceManager registrieren\r\n    for (const [identifier, ServiceConstructor] of this.serviceRegistry) {\r\n      // Dependencies automatisch bestimmen\r\n      const dependencies = this.getServiceDependencies(identifier);\r\n      \r\n      serviceManager.registerWithMetadata(identifier, ServiceConstructor, dependencies);\r\n    }\r\n  }\r\n\r\n  // Service Dependencies automatisch bestimmen\r\n  private getServiceDependencies(identifier: string): string[] {\r\n    const dependencyMap: Record<string, string[]> = {\r\n      [SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER]: [SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER],\r\n      [SERVICE_IDENTIFIERS.REGISTRATION_SERVICE]: [SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER],\r\n      [SERVICE_IDENTIFIERS.MODULE_INITIALIZER]: [SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER, SERVICE_IDENTIFIERS.REGISTRATION_SERVICE],\r\n      [SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH]: [SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER, SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH_PERSISTENCE, SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER],\r\n      [SERVICE_IDENTIFIERS.NOTIFICATION]: [SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER, SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER],\r\n      [SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH_DEMO_DATA]: [SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER],\r\n      [SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH_PERSISTENCE]: [SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER],\r\n      // Neue Services automatisch ohne Dependencies\r\n    };\r\n    \r\n    return dependencyMap[identifier] || [];\r\n  }\r\n\r\n  // Alle Services in API registrieren\r\n  registerAllServicesInAPI(): void {\r\n    const serviceManager = ServiceManager.getInstance();\r\n    \r\n    // Cross-Cutting Concerns direkt aus ServiceFactory holen\r\n    const logger = this.getCrossCuttingService(SERVICE_IDENTIFIERS.FOUNDRY_LOGGER);\r\n    const errorHandler = this.getCrossCuttingService(SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER);\r\n    \r\n    if (!(globalThis as any).game?.modules?.get(\"relationship-app\")?.api) {\r\n      (globalThis as any).game.modules.get(\"relationship-app\").api = {};\r\n    }\r\n\r\n    const moduleApi = (globalThis as any).game.modules.get(\"relationship-app\").api;\r\n\r\n    // Cross-Cutting Concerns\r\n    moduleApi.logger = logger;\r\n    moduleApi.errorHandler = errorHandler;\r\n\r\n    // ALLE Services generisch registrieren\r\n    for (const [identifier, ServiceConstructor] of this.serviceRegistry) {\r\n      // Skip Cross-Cutting Services (bereits registriert)\r\n      if (identifier === SERVICE_IDENTIFIERS.FOUNDRY_LOGGER || \r\n          identifier === SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER) {\r\n        continue;\r\n      }\r\n\r\n      // Generische API-Registrierung\r\n      this.registerServiceGenerically(identifier, ServiceConstructor, moduleApi, serviceManager);\r\n    }\r\n\r\n    // ServiceManager fÃ¼r erweiterte Nutzung\r\n    moduleApi.serviceManager = serviceManager;\r\n\r\n    (logger as any).info(`â Relationship App: ${this.serviceRegistry.size} services registered in API`);\r\n  }\r\n\r\n  // Generische Service-Registrierung\r\n  private registerServiceGenerically(identifier: string, ServiceConstructor: ServiceConstructor, moduleApi: any, serviceManager: ServiceManager): void {\r\n    // Metadaten aus der Klasse lesen\r\n    const apiName = (ServiceConstructor as any).API_NAME;\r\n    const serviceType = (ServiceConstructor as any).SERVICE_TYPE;\r\n    \r\n    if (!apiName || !serviceType) {\r\n      throw new Error(`Service ${identifier} missing API_NAME or SERVICE_TYPE metadata`);\r\n    }\r\n    \r\n    this.registerServiceWithConfig(apiName, serviceType, identifier, moduleApi, serviceManager);\r\n  }\r\n\r\n  private registerServiceWithConfig(apiName: string, type: 'singleton' | 'factory', identifier: string, moduleApi: any, serviceManager: ServiceManager): void {\r\n    if (type === 'singleton') {\r\n      // FÃ¼r API: resolve() verwenden (mit Dependency Injection)\r\n      moduleApi[apiName] = serviceManager.resolve(identifier);\r\n    } else if (type === 'factory') {\r\n      moduleApi[apiName] = (...args: any[]) => {\r\n        // FÃ¼r Factory: getService() mit zusÃ¤tzlichen Args verwenden\r\n        return serviceManager.getService(identifier, undefined, ...args);\r\n      };\r\n    }\r\n  }\r\n\r\n  // Register default services\r\n  private registerDefaultServices(): void {\r\n    // Cross-Cutting Concerns\r\n    this.registerService(SERVICE_IDENTIFIERS.FOUNDRY_LOGGER, FoundryLogger);\r\n    this.registerService(SERVICE_IDENTIFIERS.CONSOLE_ERROR_HANDLER, ConsoleErrorHandler);\r\n    this.registerService(SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER, FoundryAdapter);\r\n    \r\n    // Core Services\r\n    this.registerService(SERVICE_IDENTIFIERS.REGISTRATION_SERVICE, RegistrationService);\r\n    this.registerService(SERVICE_IDENTIFIERS.MODULE_INITIALIZER, ModuleInitializer);\r\n    \r\n    // Business Services\r\n    this.registerService(SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH, RelationshipGraphService);\r\n    this.registerService(\r\n      SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH_PERSISTENCE,\r\n      RelationshipGraphPersistenceService\r\n    );\r\n    this.registerService(\r\n      SERVICE_IDENTIFIERS.RELATIONSHIP_GRAPH_DEMO_DATA,\r\n      RelationshipGraphDemoDataService\r\n    );\r\n    this.registerService(SERVICE_IDENTIFIERS.NOTIFICATION, NotificationService);\r\n  }\r\n}\r\n","import MetadataManagementApplication from \"@/applications/MetadataManagementApplication\";\r\nimport { ServiceFactory } from \"../services/ServiceFactory\";\r\nimport { ServiceManager } from \"../services/ServiceManager\";\r\nimport { SERVICE_IDENTIFIERS } from \"../services/IServiceFactory\";\r\nimport type { IFoundryAdapter } from \"./adapters/IFoundryAdapter\";\r\nimport { MODULE_ID_PREFIX } from \"../constants\";\r\n\r\n// ServiceManager setup\r\nimport { FoundryAdapter } from \"./adapters/FoundryAdapter\";\r\nconst foundryAdapter = new FoundryAdapter();\r\n\r\nfoundryAdapter.onInit(() => {\r\n  console.log(`${MODULE_ID_PREFIX} ð Relationship App: Initializing ServiceManager...`);\r\n  \r\n  // ServiceFactory und ServiceManager erstellen\r\n  const serviceFactory = ServiceFactory.getInstance();\r\n  const serviceManager = ServiceManager.getInstance(serviceFactory);\r\n  \r\n  // ServiceFactory automatisch alle Services im ServiceManager registrieren lassen\r\n  serviceFactory.registerAllServicesInServiceManager(serviceManager);\r\n  \r\n  // ServiceManager global verfÃ¼gbar machen\r\n  (globalThis as any).relationshipApp = {\r\n    serviceManager\r\n  };\r\n  \r\n  console.log(`${MODULE_ID_PREFIX} â Relationship App: ServiceManager ready!`);\r\n});\r\n\r\n// VollstÃ¤ndig SOLID Initialization\r\nfoundryAdapter.onReady(async () => {\r\n  const { serviceManager } = (globalThis as any).relationshipApp;\r\n  \r\n  try {\r\n    // ModuleInitializer Ã¼ber ServiceManager auflÃ¶sen\r\n    const moduleInitializer = serviceManager.resolve(SERVICE_IDENTIFIERS.MODULE_INITIALIZER);\r\n    \r\n    // Initialisierung starten\r\n    await moduleInitializer.initialize();\r\n    \r\n    // Metadata Management Application (noch nicht SOLID - wird spÃ¤ter refactored)\r\n    const metadataManagementApplication = new MetadataManagementApplication();\r\n    metadataManagementApplication.render({ force: true });\r\n    \r\n    console.log(`${MODULE_ID_PREFIX} â Relationship App: Fully SOLID initialization completed!`);\r\n  } catch (error) {\r\n    console.error(`${MODULE_ID_PREFIX} ð¨ Relationship App: Initialization failed:`, error);\r\n    // FoundryAdapter fÃ¼r UI-Notifications verwenden\r\n    const foundryAdapter = serviceManager.resolve(SERVICE_IDENTIFIERS.FOUNDRY_ADAPTER) as IFoundryAdapter;\r\n    foundryAdapter.showError(\"Relationship App initialization failed. Check console for details.\");\r\n  }\r\n});\r\n"],"names":["source","version","e.state_descriptors_fixed","s","value","key","e.state_prototype_fixed","derived","e.state_unsafe_mutation","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","push","teardown","child","sibling","root","_a","index","e.effect_update_depth_exceeded","event","events","unmount","fn","state","i","clsx","_clsx","$.get","$.derived","$.set_text","$.set_attribute","$.each","$.set_selected","$.state","$.proxy","$.user_effect","$.set","$.template_effect","link","r","$$anchor","$.set_class","document","foundryAdapter"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}