{"version":3,"file":"relationship-app.js","sources":["../src/services/LoggerService.ts","../src/core/hooks/preCreateActorHook.ts","../src/core/hooks/createActorHook.ts","../src/core/hooks/preUpdateActorHook.ts","../src/core/hooks/updateActorHook.ts","../src/core/hooks.ts","../src/services/HandlebarsHelperService.ts","../src/models/RelationshipGraphDataModel.ts","../src/documents/RelationshipGraphDocument.ts","../src/core/SystemRegistrar.ts","../src/core/init.ts"],"sourcesContent":["/**\r\n * Zentraler Logger-Service f√ºr das WH40K Deathwatch System.\r\n * Ersetzt console.log/warn/error mit strukturiertem Logging.\r\n */\r\nexport class LoggerService {\r\n  private static instance: LoggerService;\r\n  private debugMode: boolean = false;\r\n\r\n  private constructor() {\r\n    // Debug-Modus standardm√§√üig deaktiviert\r\n    this.debugMode = false;\r\n  }\r\n\r\n  static getInstance(): LoggerService {\r\n    if (!LoggerService.instance) {\r\n      LoggerService.instance = new LoggerService();\r\n    }\r\n    return LoggerService.instance;\r\n  }\r\n\r\n  /**\r\n   * Setzt den Debug-Modus\r\n   */\r\n  setDebugMode(enabled: boolean): void {\r\n    this.debugMode = enabled;\r\n  }\r\n\r\n  /**\r\n   * Log-Level: Info (nur im Debug-Modus sichtbar)\r\n   */\r\n  info(message: string, ...args: unknown[]): void {\r\n    if (this.debugMode) {\r\n      console.log(`[Relationship App] ‚ÑπÔ∏è ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log-Level: Warnung (immer sichtbar)\r\n   */\r\n  warn(message: string, ...args: unknown[]): void {\r\n    console.warn(`[Relationship App] ‚ö†Ô∏è ${message}`, ...args);\r\n  }\r\n\r\n  /**\r\n   * Log-Level: Fehler (immer sichtbar)\r\n   */\r\n  error(message: string, error?: Error): void {\r\n    console.error(`[Relationship App] ‚ùå ${message}`, error);\r\n  }\r\n\r\n  /**\r\n   * Log-Level: Debug (nur im Debug-Modus sichtbar)\r\n   */\r\n  debug(message: string, ...args: unknown[]): void {\r\n    if (this.debugMode) {\r\n      console.debug(`[Relationship App] üêõ ${message}`, ...args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log-Level: Performance (nur im Debug-Modus sichtbar)\r\n   */\r\n  performance(operation: string, duration: number): void {\r\n    if (this.debugMode) {\r\n      const status = duration > 100 ? \"‚ö†Ô∏è\" : \"‚úÖ\";\r\n      console.log(\r\n        `[Relationship App] ${status} ${operation}: ${duration.toFixed(2)}ms`,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log-Level: System-Initialisierung\r\n   */\r\n  system(message: string): void {\r\n    console.log(`[Relationship App] üöÄ ${message}`);\r\n  }\r\n}\r\n","import { LoggerService } from \"../../services/LoggerService\";\r\n\r\n/**\r\n * Hook: Vor dem Erstellen eines Actors Event protokollieren.\r\n */\r\nexport function registerPreCreateActorHook(): void {\r\n  Hooks.on<\"preCreateActor\">(\r\n    \"preCreateActor\",\r\n    (actor: Actor, updates, options, userId) => {\r\n      LoggerService.getInstance().debug(\r\n        \"preCreateActor\",\r\n        actor,\r\n        updates,\r\n        options,\r\n        userId,\r\n      );\r\n    },\r\n  );\r\n}\r\n","import { LoggerService } from \"../../services/LoggerService\";\r\n\r\n/**\r\n * Hook: Nach dem Erstellen eines Actors standardm√§√üige Attribute initialisieren.\r\n */\r\nexport function registerCreateActorHook(): void {\r\n  Hooks.on<\"createActor\">(\r\n    \"createActor\",\r\n    async (actor: Actor, options, userId) => {\r\n      LoggerService.getInstance().debug(\"createActor\", actor, options, userId);\r\n    },\r\n  );\r\n}\r\n","import { LoggerService } from \"../../services/LoggerService\";\r\n\r\n/**\r\n * Hook: Vor dem Aktualisieren eines Actors Logging.\r\n */\r\nexport function registerPreUpdateActorHook(): void {\r\n  Hooks.on<\"preUpdateActor\">(\r\n    \"preUpdateActor\",\r\n    (actor: Actor, updates, options, userId) => {\r\n      LoggerService.getInstance().debug(\r\n        \"preUpdateActor\",\r\n        actor,\r\n        updates,\r\n        options,\r\n        userId,\r\n      );\r\n    },\r\n  );\r\n}\r\n","import { LoggerService } from \"../../services/LoggerService\";\r\n\r\n/**\r\n * Hook: Nach dem Aktualisieren eines Actors Logging.\r\n */\r\nexport function registerUpdateActorHook(): void {\r\n  Hooks.on<\"updateActor\">(\r\n    \"updateActor\",\r\n    async (actor: Actor, updates, options, userId) => {\r\n      LoggerService.getInstance().debug(\r\n        \"updateActor\",\r\n        actor,\r\n        updates,\r\n        options,\r\n        userId,\r\n      );\r\n      // Erweiterungslogik kann hier hinzugef√ºgt werden\r\n    },\r\n  );\r\n}\r\n","import { registerPreCreateActorHook } from \"./hooks/preCreateActorHook\";\r\nimport { registerCreateActorHook } from \"./hooks/createActorHook\";\r\nimport { registerPreUpdateActorHook } from \"./hooks/preUpdateActorHook\";\r\nimport { registerUpdateActorHook } from \"./hooks/updateActorHook\";\r\n\r\n/**\r\n * Registriert alle Actor-bezogenen Hooks.\r\n */\r\nexport function registerHooks(): void {\r\n  registerPreCreateActorHook();\r\n  registerCreateActorHook();\r\n  registerPreUpdateActorHook();\r\n  registerUpdateActorHook();\r\n}\r\n","import type { HelperOptions } from \"handlebars\";\r\nexport class HandlebarsHelperService {\r\n  static register(): void {\r\n    Handlebars.registerHelper(\r\n      \"ifEquals\",\r\n      function (\r\n        this: unknown,\r\n        arg1: unknown,\r\n        arg2: unknown,\r\n        options: HelperOptions,\r\n      ) {\r\n        return arg1 === arg2 ? options.fn(this) : options.inverse(this);\r\n      },\r\n    );\r\n  }\r\n}\r\n","const { EmbeddedDataField, ArrayField, StringField } = foundry.data.fields;\r\n\r\nexport class RelationshipNodeDataModel extends foundry.abstract.DataModel<\r\n  ReturnType<typeof RelationshipNodeDataModel.defineSchema>\r\n> {\r\n  static override defineSchema(): foundry.data.fields.DataSchema {\r\n    return {\r\n      id: new StringField({ required: true, initial: \"\" }),\r\n      actorUuid: new StringField({ required: false, initial: \"\" }),\r\n      label: new StringField({ required: false, initial: \"\" }),\r\n    };\r\n  }\r\n}\r\n\r\nexport class RelationshipEdgeDataModel extends foundry.abstract.DataModel<\r\n  ReturnType<typeof RelationshipEdgeDataModel.defineSchema>\r\n> {\r\n  static override defineSchema(): foundry.data.fields.DataSchema {\r\n    return {\r\n      id: new StringField({ required: true, initial: \"\" }),\r\n      source: new StringField({ required: true, initial: \"\" }),\r\n      target: new StringField({ required: true, initial: \"\" }),\r\n      type: new StringField({ required: false, initial: \"\" }),\r\n      label: new StringField({ required: false, initial: \"\" }),\r\n    };\r\n  }\r\n}\r\n\r\nexport class RelationshipGraphDataModel extends foundry.abstract.DataModel<\r\n  ReturnType<typeof RelationshipGraphDataModel.defineSchema>\r\n> {\r\n  static override defineSchema(): foundry.data.fields.DataSchema {\r\n    return {\r\n      nodes: new ArrayField(\r\n        new EmbeddedDataField(RelationshipNodeDataModel, { required: true }),\r\n        { required: true, initial: [] },\r\n      ),\r\n      edges: new ArrayField(\r\n        new EmbeddedDataField(RelationshipEdgeDataModel, { required: true }),\r\n        { required: true, initial: [] },\r\n      ),\r\n    };\r\n  }\r\n}\r\n","import { RelationshipGraphDataModel } from \"../models/RelationshipGraphDataModel\";\r\n\r\nexport class RelationshipGraphDocument extends foundry.documents.JournalEntry {\r\n  /**\r\n   * Wir √ºbernehmen alle Default-Metadaten von JournalEntry und √§ndern nur Name, Label und Collection.\r\n   */\r\n}\r\n","import { registerHooks } from \"./hooks\";\r\nimport { HandlebarsHelperService } from \"../services/HandlebarsHelperService\";\r\nimport { RelationshipGraphDocument } from \"../documents/RelationshipGraphDocument\";\r\n\r\n/**\r\n * Zentralisierte Registrierung aller System-Komponenten.\r\n */\r\nexport class SystemRegistrar {\r\n  /**\r\n   * Registriere Helpers, Actor- und Sheet-Klassen beim init-Hook.\r\n   */\r\n  static registerInit(): void {\r\n    HandlebarsHelperService.register();\r\n\r\n    const DocumentSheetConfig = foundry.applications.apps.DocumentSheetConfig;\r\n\r\n    CONFIG.JournalEntry.documentClass =\r\n      RelationshipGraphDocument as unknown as any;\r\n  }\r\n\r\n  /**\r\n   * Registriere Anwendungs-Hooks beim ready-Hook.\r\n   */\r\n  static registerReady(): void {\r\n    registerHooks();\r\n  }\r\n}\r\n","import { SystemRegistrar } from \"./SystemRegistrar\";\r\nimport { LoggerService } from \"../services/LoggerService\";\r\n\r\nHooks.once(\"init\", () => {\r\n  LoggerService.getInstance().system(\"Initialisiere Modul\");\r\n  LoggerService.getInstance().setDebugMode(true);\r\n  SystemRegistrar.registerInit();\r\n});\r\n\r\nHooks.once(\"ready\", () => {\r\n  SystemRegistrar.registerReady();\r\n  LoggerService.getInstance().system(\"Modul bereit\");\r\n});\r\n"],"names":[],"mappings":";;EAIO,MAAM,cAAc;AAAA,IAIjB,cAAc;AAFtB,WAAQ,YAAqB;AAI3B,WAAK,YAAY;AAAA,IAAA;AAAA,IAGnB,OAAO,cAA6B;AAC9B,UAAA,CAAC,cAAc,UAAU;AACb,sBAAA,WAAW,IAAI,cAAc;AAAA,MAAA;AAE7C,aAAO,cAAc;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAMvB,aAAa,SAAwB;AACnC,WAAK,YAAY;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAMnB,KAAK,YAAoB,MAAuB;AAC9C,UAAI,KAAK,WAAW;AAClB,gBAAQ,IAAI,yBAAyB,OAAO,IAAI,GAAG,IAAI;AAAA,MAAA;AAAA,IACzD;AAAA;AAAA;AAAA;AAAA,IAMF,KAAK,YAAoB,MAAuB;AAC9C,cAAQ,KAAK,yBAAyB,OAAO,IAAI,GAAG,IAAI;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAM1D,MAAM,SAAiB,OAAqB;AAC1C,cAAQ,MAAM,wBAAwB,OAAO,IAAI,KAAK;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAMxD,MAAM,YAAoB,MAAuB;AAC/C,UAAI,KAAK,WAAW;AAClB,gBAAQ,MAAM,yBAAyB,OAAO,IAAI,GAAG,IAAI;AAAA,MAAA;AAAA,IAC3D;AAAA;AAAA;AAAA;AAAA,IAMF,YAAY,WAAmB,UAAwB;AACrD,UAAI,KAAK,WAAW;AACZ,cAAA,SAAS,WAAW,MAAM,OAAO;AAC/B,gBAAA;AAAA,UACN,sBAAsB,MAAM,IAAI,SAAS,KAAK,SAAS,QAAQ,CAAC,CAAC;AAAA,QACnE;AAAA,MAAA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAMF,OAAO,SAAuB;AACpB,cAAA,IAAI,yBAAyB,OAAO,EAAE;AAAA,IAAA;AAAA,EAElD;ACxEO,WAAS,6BAAmC;AAC3C,UAAA;AAAA,MACJ;AAAA,MACA,CAAC,OAAc,SAAS,SAAS,WAAW;AAC1C,sBAAc,cAAc;AAAA,UAC1B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;ACbO,WAAS,0BAAgC;AACxC,UAAA;AAAA,MACJ;AAAA,MACA,OAAO,OAAc,SAAS,WAAW;AACvC,sBAAc,cAAc,MAAM,eAAe,OAAO,SAAS,MAAM;AAAA,MAAA;AAAA,IAE3E;AAAA,EACF;ACPO,WAAS,6BAAmC;AAC3C,UAAA;AAAA,MACJ;AAAA,MACA,CAAC,OAAc,SAAS,SAAS,WAAW;AAC1C,sBAAc,cAAc;AAAA,UAC1B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;ACbO,WAAS,0BAAgC;AACxC,UAAA;AAAA,MACJ;AAAA,MACA,OAAO,OAAc,SAAS,SAAS,WAAW;AAChD,sBAAc,cAAc;AAAA,UAC1B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MAAA;AAAA,IAGJ;AAAA,EACF;ACXO,WAAS,gBAAsB;AACT,+BAAA;AACH,4BAAA;AACG,+BAAA;AACH,4BAAA;AAAA,EAC1B;AAAA,ECZO,MAAM,wBAAwB;AAAA,IACnC,OAAO,WAAiB;AACX,iBAAA;AAAA,QACT;AAAA,QACA,SAEE,MACA,MACA,SACA;AACO,iBAAA,SAAS,OAAO,QAAQ,GAAG,IAAI,IAAI,QAAQ,QAAQ,IAAI;AAAA,QAAA;AAAA,MAElE;AAAA,IAAA;AAAA,EAEJ;ACfA,QAAM,EAAE,mBAAmB,YAAY,YAAY,IAAI,QAAQ,KAAK;AAAA,EAEvD,MAAA,kCAAkC,QAAQ,SAAS,UAE9D;AAAA,IACA,OAAgB,eAA+C;AACtD,aAAA;AAAA,QACL,IAAI,IAAI,YAAY,EAAE,UAAU,MAAM,SAAS,IAAI;AAAA,QACnD,WAAW,IAAI,YAAY,EAAE,UAAU,OAAO,SAAS,IAAI;AAAA,QAC3D,OAAO,IAAI,YAAY,EAAE,UAAU,OAAO,SAAS,GAAI,CAAA;AAAA,MACzD;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEa,MAAA,kCAAkC,QAAQ,SAAS,UAE9D;AAAA,IACA,OAAgB,eAA+C;AACtD,aAAA;AAAA,QACL,IAAI,IAAI,YAAY,EAAE,UAAU,MAAM,SAAS,IAAI;AAAA,QACnD,QAAQ,IAAI,YAAY,EAAE,UAAU,MAAM,SAAS,IAAI;AAAA,QACvD,QAAQ,IAAI,YAAY,EAAE,UAAU,MAAM,SAAS,IAAI;AAAA,QACvD,MAAM,IAAI,YAAY,EAAE,UAAU,OAAO,SAAS,IAAI;AAAA,QACtD,OAAO,IAAI,YAAY,EAAE,UAAU,OAAO,SAAS,GAAI,CAAA;AAAA,MACzD;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEa,MAAA,mCAAmC,QAAQ,SAAS,UAE/D;AAAA,IACA,OAAgB,eAA+C;AACtD,aAAA;AAAA,QACL,OAAO,IAAI;AAAA,UACT,IAAI,kBAAkB,2BAA2B,EAAE,UAAU,MAAM;AAAA,UACnE,EAAE,UAAU,MAAM,SAAS,CAAG,EAAA;AAAA,QAChC;AAAA,QACA,OAAO,IAAI;AAAA,UACT,IAAI,kBAAkB,2BAA2B,EAAE,UAAU,MAAM;AAAA,UACnE,EAAE,UAAU,MAAM,SAAS,CAAG,EAAA;AAAA,QAAA;AAAA,MAElC;AAAA,IAAA;AAAA,EAEJ;AAAA,ECzCa,MAAA,kCAAkC,QAAQ,UAAU,aAAa;AAAA;AAAA;AAAA;AAAA,EAI9E;AAAA,ECCO,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA,IAI3B,OAAO,eAAqB;AAC1B,8BAAwB,SAAS;AAEL,cAAQ,aAAa,KAAK;AAEtD,aAAO,aAAa,gBAClB;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA,IAMJ,OAAO,gBAAsB;AACb,oBAAA;AAAA,IAAA;AAAA,EAElB;ACvBA,QAAM,KAAK,QAAQ,MAAM;AACT,kBAAA,YAAA,EAAc,OAAO,qBAAqB;AAC1C,kBAAA,YAAA,EAAc,aAAa,IAAI;AAC7C,oBAAgB,aAAa;AAAA,EAC/B,CAAC;AAED,QAAM,KAAK,SAAS,MAAM;AACxB,oBAAgB,cAAc;AAChB,kBAAA,YAAA,EAAc,OAAO,cAAc;AAAA,EACnD,CAAC;;"}